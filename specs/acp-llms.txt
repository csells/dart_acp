# https://agentclientprotocol.com llms-full.txt

## Agent Client Protocol
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Overview

Introduction

The Agent Client Protocol standardizes communication between code editors (IDEs, text-editors, etc.) and coding agents (programs that use generative AI to autonomously modify code).The protocol is still under development, but it should be complete enough to build interesting user experiences using it.

## [​](https://agentclientprotocol.com/overview/introduction\\#why-acp%3F)  Why ACP?

AI coding agents and editors are tightly coupled but interoperability isn’t the default. Each editor must build custom integrations for every agent they want to support, and agents must implement editor-specific APIs to reach users.
This creates several problems:

- Integration overhead: Every new agent-editor combination requires custom work
- Limited compatibility: Agents work with only a subset of available editors
- Developer lock-in: Choosing an agent often means accepting their available interfaces

ACP solves this by providing a standardized protocol for agent-editor communication, similar to how the [Language Server Protocol (LSP)](https://microsoft.github.io/language-server-protocol/) standardized language server integration.Agents that implement ACP work with any compatible editor. Editors that support ACP gain access to the entire ecosystem of ACP-compatible agents.
This decoupling allows both sides to innovate independently while giving developers the freedom to choose the best tools for their workflow.

## [​](https://agentclientprotocol.com/overview/introduction\\#overview)  Overview

ACP assumes that the user is primarily in their editor, and wants to reach out and use agents to assist them with specific tasks.Agents run as sub-processes of the code editor, and communicate using JSON-RPC over stdio. The protocol re-uses the JSON representations used in MCP where possible, but includes custom types for useful agentic coding UX elements, like displaying diffs.The default format for user-readable text is Markdown, which allows enough flexibility to represent rich formatting without requiring that the code editor is capable of rendering HTML.

## [​](https://agentclientprotocol.com/overview/introduction\\#supported-editors)  Supported Editors

- [Zed](https://zed.dev/docs/ai/external-agents)
- [neovim](https://neovim.io/) through the [CodeCompanion](https://github.com/olimorris/codecompanion.nvim) plugin
- [yetone/avante.nvim](https://github.com/yetone/avante.nvim): A Neovim plugin designed to emulate the behaviour of the Cursor AI IDE.

## [​](https://agentclientprotocol.com/overview/introduction\\#supported-agents)  Supported Agents

- [Gemini](https://github.com/google-gemini/gemini-cli)
- [Claude Code](https://docs.anthropic.com/en/docs/claude-code/overview)
  - [via Zed’s SDK adapter](https://github.com/zed-industries/claude-code-acp)
  - [via Xuanwo’s SDK adapter](https://github.com/Xuanwo/acp-claude-code)

Was this page helpful?

YesNo

[ArchitectureOverview of the Agent Client Protocol architecture\\\\
\\\\
Next](https://agentclientprotocol.com/overview/architecture)

On this page

- [Why ACP?](https://agentclientprotocol.com/overview/introduction#why-acp%3F)
- [Overview](https://agentclientprotocol.com/overview/introduction#overview)
- [Supported Editors](https://agentclientprotocol.com/overview/introduction#supported-editors)
- [Supported Agents](https://agentclientprotocol.com/overview/introduction#supported-agents)

Assistant

Responses are generated using AI and may contain mistakes.

## Community Contributions
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Community

Contributing

We welcome contributions from the community!All contributors must adhere to [Zed’s Code of Conduct](https://zed.dev/code-of-conduct).For questions and discussions, please use GitHub Discussions.

Was this page helpful?

YesNo

[Previous\\\\
\\\\
RustRust library for the Agent Client Protocol](https://agentclientprotocol.com/libraries/rust)

Assistant

Responses are generated using AI and may contain mistakes.

## TypeScript Library
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Libraries

TypeScript

The [@zed-industries/agent-client-protocol](https://www.npmjs.com/package/@zed-industries/agent-client-protocol) npm
package provides implementations of both sides of the Agent Client Protocol that
you can use to build your own agent server or client.To get started, add the package as a dependency to your project:

Copy

```
npm install @zed-industries/agent-client-protocol

```

Depending on what kind of tool you’re building, you’ll need to use either the
[AgentSideConnection](https://zed-industries.github.io/agent-client-protocol/classes/AgentSideConnection.html)
class or the
[ClientSideConnection](https://zed-industries.github.io/agent-client-protocol/classes/ClientSideConnection.html)
class to establish communication with the ACP counterpart.You can find example implementations of both sides in the [main repository](https://github.com/zed-industries/agent-client-protocol/tree/main/typescript/examples). These can be run from your terminal or from an ACP Client like [Zed](https://zed.dev/), making them great starting points for your own integration!Browse the [TypeScript library reference](https://zed-industries.github.io/agent-client-protocol) for detailed API documentation.For a complete, production-ready implementation of an ACP agent, check out [Gemini CLI](https://github.com/google-gemini/gemini-cli/blob/main/packages/cli/src/zed-integration/zedIntegration.ts).

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/protocol/schema) [RustRust library for the Agent Client Protocol\\\\
\\\\
Next](https://agentclientprotocol.com/libraries/rust)

Assistant

Responses are generated using AI and may contain mistakes.

## Agent Client Protocol
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Overview

Architecture

The Agent Client Protocol defines a standard interface for communication between AI agents and client applications. The architecture is designed to be flexible, extensible, and platform-agnostic.

## [​](https://agentclientprotocol.com/overview/architecture\\#design-philosophy)  Design Philosophy

The protocol architecture follows several key principles:

1. **MCP-friendly**: The protocol is built on JSON-RPC, and re-uses MCP types where possible so that integrators don’t need to build yet-another representation for common data types.
2. **UX-first**: It is designed to solve the UX challenges of interacting with AI agents; ensuring there’s enough flexibility to render clearly the agents intent, but is no more abstract than it needs to be.
3. **Trusted**: ACP works when you’re using a code editor to talk to a model you trust. You still have controls over the agent’s tool calls, but the code editor gives the agent access to local files and MCP servers.

## [​](https://agentclientprotocol.com/overview/architecture\\#setup)  Setup

When the user tries to connect to an agent, the editor boots the agent sub-process on demand, and all communication happens over stdin/stdout.Each connection can suppport several concurrent sessions, so you can have multiple trains of thought going on at once.![Server Client setup](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/images/server-client.svg?maxW=579&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=7f9a05a2a2bed471aa07f33578d67489)ACP makes heavy use of JSON-RPC notifications to allow the agent to stream updates to the UI in real-time. It also uses JSON-RPC’s bidrectional requests to allow the agent to make requests of the code editor: for example to request permissions for a tool call.

## [​](https://agentclientprotocol.com/overview/architecture\\#mcp)  MCP

Commonly the code editor will have user-configured MCP servers. When forwarding the prompt from the user, it passes configuration for these to the agent. This allows the agent to connect directly to the MCP server.![MCP Server connection](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/images/mcp.svg?maxW=689&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=cbf1d9e091a396778cf182cff266740a)The code editor may itself also wish to export MCP based tools. Instead of trying to run MCP and ACP on the same socket, the code editor can provide its own MCP server as configuration. As agents may only support MCP over stdio, the code editor can provide a small proxy that tunnels requests back to itself:![MCP connection to self](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/images/mcp-proxy.svg?maxW=632&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=a4152179775928d8088ea2445cee7578)

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/overview/introduction) [OverviewHow the Agent Client Protocol works\\\\
\\\\
Next](https://agentclientprotocol.com/protocol/overview)

On this page

- [Design Philosophy](https://agentclientprotocol.com/overview/architecture#design-philosophy)
- [Setup](https://agentclientprotocol.com/overview/architecture#setup)
- [MCP](https://agentclientprotocol.com/overview/architecture#mcp)

Assistant

Responses are generated using AI and may contain mistakes.

## Session Setup Guide
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Protocol

Session Setup

Sessions represent a specific conversation or thread between the [Client](https://agentclientprotocol.com/protocol/overview#client) and [Agent](https://agentclientprotocol.com/protocol/overview#agent). Each session maintains its own context, conversation history, and state, allowing multiple independent interactions with the same Agent.Before creating a session, Clients **MUST** first complete the [initialization](https://agentclientprotocol.com/protocol/initialization) phase to establish protocol compatibility and capabilities.

AgentClientAgentClientInitializedCreate session contextConnect to MCP serversRestore session contextConnect to MCP serversReplay conversation history...All content streamedalt​Ready for promptssession/newsession/new response (sessionId)session/load (sessionId)session/updatesession/updatesession/load response

## [​](https://agentclientprotocol.com/protocol/session-setup\\#creating-a-session)  Creating a Session

Clients create a new session by calling the `session/new` method with:

- The [working directory](https://agentclientprotocol.com/protocol/session-setup#working-directory) for the session
- A list of [MCP servers](https://agentclientprotocol.com/protocol/session-setup#mcp-servers) the Agent should connect to

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 1,
  \"method\": \"session/new\",
  \"params\": {
    \"cwd\": \"/home/user/project\",
    \"mcpServers\": [\\
      {\\
        \"name\": \"filesystem\",\\
        \"command\": \"/path/to/mcp-server\",\\
        \"args\": [\"--stdio\"],\\
        \"env\": []\\
      }\\
    ]
  }
}

```

The Agent **MUST** respond with a unique [Session ID](https://agentclientprotocol.com/protocol/session-setup#session-id) that identifies this conversation:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 1,
  \"result\": {
    \"sessionId\": \"sess_abc123def456\"
  }
}

```

## [​](https://agentclientprotocol.com/protocol/session-setup\\#loading-sessions)  Loading Sessions

Agents that support the `loadSession` capability allow Clients to resume previous conversations. This feature enables persistence across restarts and sharing sessions between different Client instances.

### [​](https://agentclientprotocol.com/protocol/session-setup\\#checking-support)  Checking Support

Before attempting to load a session, Clients **MUST** verify that the Agent supports this capability by checking the `loadSession` field in the `initialize` response:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 0,
  \"result\": {
    \"protocolVersion\": 1,
    \"agentCapabilities\": {
      \"loadSession\": true
    }
  }
}

```

If `loadSession` is `false` or not present, the Agent does not support loading sessions and Clients **MUST NOT** attempt to call `session/load`.

### [​](https://agentclientprotocol.com/protocol/session-setup\\#loading-a-session)  Loading a Session

To load an existing session, Clients **MUST** call the `session/load` method with:

- The [Session ID](https://agentclientprotocol.com/protocol/session-setup#session-id) to resume
- [MCP servers](https://agentclientprotocol.com/protocol/session-setup#mcp-servers) to connect to
- The [working directory](https://agentclientprotocol.com/protocol/session-setup#working-directory)

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 1,
  \"method\": \"session/load\",
  \"params\": {
    \"sessionId\": \"sess_789xyz\",
    \"cwd\": \"/home/user/project\",
    \"mcpServers\": [\\
      {\\
        \"name\": \"filesystem\",\\
        \"command\": \"/path/to/mcp-server\",\\
        \"args\": [\"--mode\", \"filesystem\"],\\
        \"env\": []\\
      }\\
    ]
  }
}

```

The Agent **MUST** replay the entire conversation to the Client in the form of `session/update` notifications (like `session/prompt`).For example, a user message from the conversation history:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_789xyz\",
    \"update\": {
      \"sessionUpdate\": \"user_message_chunk\",
      \"content\": {
        \"type\": \"text\",
        \"text\": \"What's the capital of France?\"
      }
    }
  }
}

```

Followed by the agent’s response:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_789xyz\",
    \"update\": {
      \"sessionUpdate\": \"agent_message_chunk\",
      \"content\": {
        \"type\": \"text\",
        \"text\": \"The capital of France is Paris.\"
      }
    }
  }
}

```

When **all** the conversation entries have been streamed to the Client, the Agent **MUST** respond to the original `session/load` request.

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 1,
  \"result\": null
}

```

The Client can then continue sending prompts as if the session was never interrupted.

## [​](https://agentclientprotocol.com/protocol/session-setup\\#session-id)  Session ID

The session ID returned by `session/new` is a unique identifier for the conversation context.Clients use this ID to:

- Send prompt requests via `session/prompt`
- Cancel ongoing operations via `session/cancel`
- Load previous sessions via `session/load` (if the Agent supports the `loadSession` capability)

## [​](https://agentclientprotocol.com/protocol/session-setup\\#working-directory)  Working Directory

The `cwd` (current working directory) parameter establishes the file system context for the session. This directory:

- **MUST** be an absolute path
- **MUST** be used for the session regardless of where the Agent subprocess was spawned
- **SHOULD** serve as a boundary for tool operations on the file system

## [​](https://agentclientprotocol.com/protocol/session-setup\\#mcp-servers)  MCP Servers

The [Model Context Protocol (MCP)](https://modelcontextprotocol.io/) allows Agents to access external tools and data sources. When creating a session, Clients **MAY** include connection details for MCP servers that the Agent should connect to.Each MCP server specification includes:

[​](https://agentclientprotocol.com/protocol/session-setup#param-name)

name

string

required

A human-readable identifier for the server

[​](https://agentclientprotocol.com/protocol/session-setup#param-command)

command

string

required

The absolute path to the MCP server executable

[​](https://agentclientprotocol.com/protocol/session-setup#param-args)

args

array

required

Command-line arguments to pass to the server

[​](https://agentclientprotocol.com/protocol/session-setup#param-env)

env

EnvVariable\\[\\]

Environment variables to set when launching the server

Show EnvVariable

[​](https://agentclientprotocol.com/protocol/session-setup#param-name-1)

name

string

The name of the environment variable.

[​](https://agentclientprotocol.com/protocol/session-setup#param-value)

value

string

The value of the environment variable.

Agents **SHOULD** connect to all MCP servers specified by the Client.Clients **MAY** use this ability to provide tools directly to the underlying language model by including their own MCP server.

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/protocol/initialization) [Prompt TurnUnderstanding the core conversation flow\\\\
\\\\
Next](https://agentclientprotocol.com/protocol/prompt-turn)

On this page

- [Creating a Session](https://agentclientprotocol.com/protocol/session-setup#creating-a-session)
- [Loading Sessions](https://agentclientprotocol.com/protocol/session-setup#loading-sessions)
- [Checking Support](https://agentclientprotocol.com/protocol/session-setup#checking-support)
- [Loading a Session](https://agentclientprotocol.com/protocol/session-setup#loading-a-session)
- [Session ID](https://agentclientprotocol.com/protocol/session-setup#session-id)
- [Working Directory](https://agentclientprotocol.com/protocol/session-setup#working-directory)
- [MCP Servers](https://agentclientprotocol.com/protocol/session-setup#mcp-servers)

Assistant

Responses are generated using AI and may contain mistakes.

## Robots.txt Access Rules
User-agent: \\*
Sitemap: https://agentclientprotocol.com/sitemap.xml

## Prompt Turn Lifecycle
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Protocol

Prompt Turn

A prompt turn represents a complete interaction cycle between the [Client](https://agentclientprotocol.com/protocol/overview#client) and [Agent](https://agentclientprotocol.com/protocol/overview#agent), starting with a user message and continuing until the Agent completes its response. This may involve multiple exchanges with the language model and tool invocations.Before sending prompts, Clients **MUST** first complete the [initialization](https://agentclientprotocol.com/protocol/initialization) phase and [session setup](https://agentclientprotocol.com/protocol/session-setup).

## [​](https://agentclientprotocol.com/protocol/prompt-turn\\#the-prompt-turn-lifecycle)  The Prompt Turn Lifecycle

A prompt turn follows a structured flow that enables rich interactions between the user, Agent, and any connected tools.

AgentClientAgentClientSession readyUser sends messageProcess with LLMLLM responds withcontent/tool callsUser grants/deniesopt\\[Permission required\\]Execute toolSend tool resultsback to LLMopt\\[Tool calls requested\\]User cancels promptAbort operationsopt\\[User cancelled during execution\\]loop\\[Until completion\\]session/prompt (user message)session/update (plan)session/update (agent\\_message\\_chunk)session/update (tool\\_call)session/request\\_permissionPermission responsesession/update (tool\\_call status: in\\_progress)session/update (tool\\_call status: completed)session/cancelsession/prompt response (cancelled)session/prompt response (stopReason)

### [​](https://agentclientprotocol.com/protocol/prompt-turn\\#1-user-message)  1\\. User Message

The turn begins when the Client sends a `session/prompt`:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 2,
  \"method\": \"session/prompt\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"prompt\": [\\
      {\\
        \"type\": \"text\",\\
        \"text\": \"Can you analyze this code for potential issues?\"\\
      },\\
      {\\
        \"type\": \"resource\",\\
        \"resource\": {\\
          \"uri\": \"file:///home/user/project/main.py\",\\
          \"mimeType\": \"text/x-python\",\\
          \"text\": \"def process_data(items):\
    for item in items:\
        print(item)\"\\
        }\\
      }\\
    ]
  }
}

```

[​](https://agentclientprotocol.com/protocol/prompt-turn#param-session-id)

sessionId

SessionId

The [ID](https://agentclientprotocol.com/protocol/session-setup#session-id) of the session to send this message to.

[​](https://agentclientprotocol.com/protocol/prompt-turn#param-prompt)

prompt

ContentBlock\\[\\]

The contents of the user message, e.g. text, images, files, etc.Clients **MUST** restrict types of content according to the [Prompt Capabilities](https://agentclientprotocol.com/protocol/initialization#prompt-capabilities) established during [initialization](https://agentclientprotocol.com/protocol/initialization). [Learn more about Content](https://agentclientprotocol.com/protocol/content)

### [​](https://agentclientprotocol.com/protocol/prompt-turn\\#2-agent-processing)  2\\. Agent Processing

Upon receiving the prompt request, the Agent processes the user’s message and sends it to the language model, which **MAY** respond with text content, tool calls, or both.

### [​](https://agentclientprotocol.com/protocol/prompt-turn\\#3-agent-reports-output)  3\\. Agent Reports Output

The Agent reports the model’s output to the Client via `session/update` notifications. This may include the Agent’s plan for accomplishing the task:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"update\": {
      \"sessionUpdate\": \"plan\",
      \"entries\": [\\
        {\\
          \"content\": \"Check for syntax errors\",\\
          \"priority\": \"high\",\\
          \"status\": \"pending\"\\
        },\\
        {\\
          \"content\": \"Identify potential type issues\",\\
          \"priority\": \"medium\",\\
          \"status\": \"pending\"\\
        },\\
        {\\
          \"content\": \"Review error handling patterns\",\\
          \"priority\": \"medium\",\\
          \"status\": \"pending\"\\
        },\\
        {\\
          \"content\": \"Suggest improvements\",\\
          \"priority\": \"low\",\\
          \"status\": \"pending\"\\
        }\\
      ]
    }
  }
}

```

See all 32 lines

[Learn more about Agent Plans](https://agentclientprotocol.com/protocol/agent-plan) The Agent then reports text responses from the model:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"update\": {
      \"sessionUpdate\": \"agent_message_chunk\",
      \"content\": {
        \"type\": \"text\",
        \"text\": \"I'll analyze your code for potential issues. Let me examine it...\"
      }
    }
  }
}

```

If the model requested tool calls, these are also reported immediately:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"update\": {
      \"sessionUpdate\": \"tool_call\",
      \"toolCallId\": \"call_001\",
      \"title\": \"Analyzing Python code\",
      \"kind\": \"other\",
      \"status\": \"pending\"
    }
  }
}

```

### [​](https://agentclientprotocol.com/protocol/prompt-turn\\#4-check-for-completion)  4\\. Check for Completion

If there are no pending tool calls, the turn ends and the Agent **MUST** respond to the original `session/prompt` request with a `StopReason`:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 2,
  \"result\": {
    \"stopReason\": \"end_turn\"
  }
}

```

Agents **MAY** stop the turn at any point by returning the corresponding [`StopReason`](https://agentclientprotocol.com/protocol/prompt-turn#stop-reasons).

### [​](https://agentclientprotocol.com/protocol/prompt-turn\\#5-tool-invocation-and-status-reporting)  5\\. Tool Invocation and Status Reporting

Before proceeding with execution, the Agent **MAY** request permission from the Client via the `session/request_permission` method.Once permission is granted (if required), the Agent **SHOULD** invoke the tool and report a status update marking the tool as `in_progress`:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"update\": {
      \"sessionUpdate\": \"tool_call_update\",
      \"toolCallId\": \"call_001\",
      \"status\": \"in_progress\"
    }
  }
}

```

As the tool runs, the Agent **MAY** send additional updates, providing real-time feedback about tool execution progress.While tools execute on the Agent, they **MAY** leverage Client capabilities such as the file system ( `fs`) methods to access resources within the Client’s environment.When the tool completes, the Agent sends another update with the final status and any content:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"update\": {
      \"sessionUpdate\": \"tool_call_update\",
      \"toolCallId\": \"call_001\",
      \"status\": \"completed\",
      \"content\": [\\
        {\\
          \"type\": \"content\",\\
          \"content\": {\\
            \"type\": \"text\",\\
            \"text\": \"Analysis complete:\
- No syntax errors found\
- Consider adding type hints for better clarity\
- The function could benefit from error handling for empty lists\"\\
          }\\
        }\\
      ]
    }
  }
}

```

[Learn more about Tool Calls](https://agentclientprotocol.com/protocol/tool-calls)

### [​](https://agentclientprotocol.com/protocol/prompt-turn\\#6-continue-conversation)  6\\. Continue Conversation

The Agent sends the tool results back to the language model as another request.The cycle returns to [step 2](https://agentclientprotocol.com/protocol/prompt-turn#2-agent-processing), continuing until the language model completes its response without requesting additional tool calls or the turn gets stopped by the Agent or cancelled by the Client.

## [​](https://agentclientprotocol.com/protocol/prompt-turn\\#stop-reasons)  Stop Reasons

When an Agent stops a turn, it must specify the corresponding `StopReason`:

[​](https://agentclientprotocol.com/protocol/prompt-turn#param-end-turn)

end\\_turn

The language model finishes responding without requesting more tools

[​](https://agentclientprotocol.com/protocol/prompt-turn#param-max-tokens)

max\\_tokens

The maximum token limit is reached

[​](https://agentclientprotocol.com/protocol/prompt-turn#param-max-turn-requests)

max\\_turn\\_requests

The maximum number of model requests in a single turn is exceeded

[​](https://agentclientprotocol.com/protocol/prompt-turn#param-refusal)

refusal

The Agent refuses to continue

[​](https://agentclientprotocol.com/protocol/prompt-turn#param-cancelled)

cancelled

The Client cancels the turn

## [​](https://agentclientprotocol.com/protocol/prompt-turn\\#cancellation)  Cancellation

Clients **MAY** cancel an ongoing prompt turn at any time by sending a `session/cancel` notification:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/cancel\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\"
  }
}

```

The Client **SHOULD** preemptively mark all non-finished tool calls pertaining to the current turn as `cancelled` as soon as it sends the `session/cancel` notification.The Client **MUST** respond to all pending `session/request_permission` requests with the `cancelled` outcome.When the Agent receives this notification, it **SHOULD** stop all language model requests and all tool call invocations as soon as possible.After all ongoing operations have been successfully aborted and pending updates have been sent, the Agent **MUST** respond to the original `session/prompt` request with the `cancelled` [stop reason](https://agentclientprotocol.com/protocol/prompt-turn#stop-reasons).

API client libraries and tools often throw an exception when their operation is aborted, which may propagate as an error response to `session/prompt`.Clients often display unrecognized errors from the Agent to the user, which would be undesirable for cancellations as they aren’t considered errors.Agents **MUST** catch these errors and return the semantically meaningful `cancelled` stop reason, so that Clients can reliably confirm the cancellation.

The Agent **MAY** send `session/update` notifications with content or tool call updates after receiving the `session/cancel` notification, but it **MUST** ensure that it does so before responding to the `session/prompt` request.The Client **SHOULD** still accept tool call updates received after sending `session/cancel`.

* * *

Once a prompt turn completes, the Client may send another `session/prompt` to continue the conversation, building on the context established in previous turns.

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/protocol/session-setup) [ContentUnderstanding content blocks in the Agent Client Protocol\\\\
\\\\
Next](https://agentclientprotocol.com/protocol/content)

On this page

- [The Prompt Turn Lifecycle](https://agentclientprotocol.com/protocol/prompt-turn#the-prompt-turn-lifecycle)
- [1\\. User Message](https://agentclientprotocol.com/protocol/prompt-turn#1-user-message)
- [2\\. Agent Processing](https://agentclientprotocol.com/protocol/prompt-turn#2-agent-processing)
- [3\\. Agent Reports Output](https://agentclientprotocol.com/protocol/prompt-turn#3-agent-reports-output)
- [4\\. Check for Completion](https://agentclientprotocol.com/protocol/prompt-turn#4-check-for-completion)
- [5\\. Tool Invocation and Status Reporting](https://agentclientprotocol.com/protocol/prompt-turn#5-tool-invocation-and-status-reporting)
- [6\\. Continue Conversation](https://agentclientprotocol.com/protocol/prompt-turn#6-continue-conversation)
- [Stop Reasons](https://agentclientprotocol.com/protocol/prompt-turn#stop-reasons)
- [Cancellation](https://agentclientprotocol.com/protocol/prompt-turn#cancellation)

Assistant

Responses are generated using AI and may contain mistakes.

## Agent Client Protocol
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Protocol

Overview

The Agent Client Protocol allows [Agents](https://agentclientprotocol.com/protocol/overview#agent) and [Clients](https://agentclientprotocol.com/protocol/overview#client) to communicate by exposing methods that each side can call and sending notifications to inform each other of events.

## [​](https://agentclientprotocol.com/protocol/overview\\#communication-model)  Communication Model

The protocol follows the [JSON-RPC 2.0](https://www.jsonrpc.org/specification) specification with two types of messages:

- **Methods**: Request-response pairs that expect a result or error
- **Notifications**: One-way messages that don’t expect a response

## [​](https://agentclientprotocol.com/protocol/overview\\#message-flow)  Message Flow

A typical flow follows this pattern:

1

Initialization Phase

- Client → Agent: `initialize` to establish connection
- Client → Agent: `authenticate` if required by the Agent

2

Session Setup - either:

- Client → Agent: `session/new` to create a new session
- Client → Agent: `session/load` to resume an existing session if supported

3

Prompt Turn

- Client → Agent: `session/prompt` to send user message
- Agent → Client: `session/update` notifications for progress updates
- Agent → Client: File operations or permission requests as needed
- Client → Agent: `session/cancel` to interrupt processing if needed
- Turn ends and the Agent sends the `session/prompt` response with a stop reason

## [​](https://agentclientprotocol.com/protocol/overview\\#agent)  Agent

Agents are programs that use generative AI to autonomously modify code. They typically run as subprocesses of the Client.

### [​](https://agentclientprotocol.com/protocol/overview\\#baseline-methods)  Baseline Methods

[​](https://agentclientprotocol.com/protocol/overview#param-initialize)

initialize

[Schema](https://agentclientprotocol.com/protocol/schema#initialize)

[Negotiate versions and exchange capabilities.](https://agentclientprotocol.com/protocol/initialization).

[​](https://agentclientprotocol.com/protocol/overview#param-authenticate)

authenticate

[Schema](https://agentclientprotocol.com/protocol/schema#authenticate)

Authenticate with the Agent (if required).

[​](https://agentclientprotocol.com/protocol/overview#param-session-new)

session/new

[Schema](https://agentclientprotocol.com/protocol/schema#session%2Fnew)

[Create a new conversation session](https://agentclientprotocol.com/protocol/session-setup#creating-a-session).

[​](https://agentclientprotocol.com/protocol/overview#param-session-prompt)

session/prompt

[Schema](https://agentclientprotocol.com/protocol/schema#session%2Fprompt)

[Send user prompts](https://agentclientprotocol.com/protocol/prompt-turn#1-user-message) to the Agent.

### [​](https://agentclientprotocol.com/protocol/overview\\#optional-methods)  Optional Methods

[​](https://agentclientprotocol.com/protocol/overview#param-session-load)

session/load

[Schema](https://agentclientprotocol.com/protocol/schema#session%2Fload)

[Load an existing session](https://agentclientprotocol.com/protocol/session-setup#loading-sessions) (requires
`loadSession` capability).

### [​](https://agentclientprotocol.com/protocol/overview\\#notifications)  Notifications

[​](https://agentclientprotocol.com/protocol/overview#param-session-cancel)

session/cancel

[Schema](https://agentclientprotocol.com/protocol/schema#session%2Fcancel)

[Cancel ongoing operations](https://agentclientprotocol.com/protocol/prompt-turn#cancellation) (no response
expected).

## [​](https://agentclientprotocol.com/protocol/overview\\#client)  Client

Clients provide the interface between users and agents. They are typically code editors (IDEs, text editors) but can also be other UIs for interacting with agents. Clients manage the environment, handle user interactions, and control access to resources.

### [​](https://agentclientprotocol.com/protocol/overview\\#baseline-methods-2)  Baseline Methods

[​](https://agentclientprotocol.com/protocol/overview#param-session-request-permission)

session/request\\_permission

[Schema](https://agentclientprotocol.com/protocol/schema#session%2Frequest_permission)

[Request user authorization](https://agentclientprotocol.com/protocol/tool-calls#requesting-permission) for tool
calls.

### [​](https://agentclientprotocol.com/protocol/overview\\#optional-methods-2)  Optional Methods

[​](https://agentclientprotocol.com/protocol/overview#param-fs-read-text-file)

fs/read\\_text\\_file

[Schema](https://agentclientprotocol.com/protocol/schema#fs%2Fread_text_file)

[Read file contents](https://agentclientprotocol.com/protocol/file-system#reading-files) (requires `fs.readTextFile`
capability).

[​](https://agentclientprotocol.com/protocol/overview#param-fs-write-text-file)

fs/write\\_text\\_file

[Schema](https://agentclientprotocol.com/protocol/schema#fs%2Fwrite_text_file)

[Write file contents](https://agentclientprotocol.com/protocol/file-system#writing-files) (requires
`fs.writeTextFile` capability).

### [​](https://agentclientprotocol.com/protocol/overview\\#notifications-2)  Notifications

[​](https://agentclientprotocol.com/protocol/overview#param-session-update)

session/update

[Schema](https://agentclientprotocol.com/protocol/schema#session%2Fupdate)

[Send progress updates](https://agentclientprotocol.com/protocol/prompt-turn#3-agent-reports-output) during prompt
processing (no response expected).

## [​](https://agentclientprotocol.com/protocol/overview\\#argument-requirements)  Argument requirements

- All file paths in the protocol **MUST** be absolute.
- Line numbers are 1-based

## [​](https://agentclientprotocol.com/protocol/overview\\#error-handling)  Error Handling

All methods follow standard JSON-RPC 2.0 [error handling](https://www.jsonrpc.org/specification#error_object):

- Successful responses include a `result` field
- Errors include an `error` object with `code` and `message`
- Notifications never receive responses (success or error)

## [​](https://agentclientprotocol.com/protocol/overview\\#next-steps)  Next Steps

- Learn about [Initialization](https://agentclientprotocol.com/protocol/initialization) to understand version and capability negotiation
- Understand [Session Setup](https://agentclientprotocol.com/protocol/session-setup) for creating and loading sessions
- Review the [Prompt Turn](https://agentclientprotocol.com/protocol/prompt-turn) lifecycle

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/overview/architecture) [InitializationHow all Agent Client Protocol connections begin\\\\
\\\\
Next](https://agentclientprotocol.com/protocol/initialization)

On this page

- [Communication Model](https://agentclientprotocol.com/protocol/overview#communication-model)
- [Message Flow](https://agentclientprotocol.com/protocol/overview#message-flow)
- [Agent](https://agentclientprotocol.com/protocol/overview#agent)
- [Baseline Methods](https://agentclientprotocol.com/protocol/overview#baseline-methods)
- [Optional Methods](https://agentclientprotocol.com/protocol/overview#optional-methods)
- [Notifications](https://agentclientprotocol.com/protocol/overview#notifications)
- [Client](https://agentclientprotocol.com/protocol/overview#client)
- [Baseline Methods](https://agentclientprotocol.com/protocol/overview#baseline-methods-2)
- [Optional Methods](https://agentclientprotocol.com/protocol/overview#optional-methods-2)
- [Notifications](https://agentclientprotocol.com/protocol/overview#notifications-2)
- [Argument requirements](https://agentclientprotocol.com/protocol/overview#argument-requirements)
- [Error Handling](https://agentclientprotocol.com/protocol/overview#error-handling)
- [Next Steps](https://agentclientprotocol.com/protocol/overview#next-steps)

Assistant

Responses are generated using AI and may contain mistakes.

## Agent Client Protocols
https://agentclientprotocol.com/community/contributinghttps://agentclientprotocol.com/libraries/rust2025-08-27T05:14:11.673Zhttps://agentclientprotocol.com/libraries/typescript2025-08-27T05:14:11.672Zhttps://agentclientprotocol.com/overview/architecture2025-08-26T13:21:13.128Zhttps://agentclientprotocol.com/overview/introduction2025-09-03T17:34:06.935Zhttps://agentclientprotocol.com/protocol/agent-plan2025-08-25T18:36:23.116Zhttps://agentclientprotocol.com/protocol/content2025-08-25T21:20:47.201Zhttps://agentclientprotocol.com/protocol/file-system2025-08-26T15:37:57.794Zhttps://agentclientprotocol.com/protocol/initialization2025-08-26T21:45:50.919Zhttps://agentclientprotocol.com/protocol/overview2025-08-26T21:45:50.917Zhttps://agentclientprotocol.com/protocol/prompt-turn2025-08-25T21:20:49.406Zhttps://agentclientprotocol.com/protocol/schema2025-09-03T21:52:28.838Zhttps://agentclientprotocol.com/protocol/session-setup2025-08-26T15:37:58.281Zhttps://agentclientprotocol.com/protocol/tool-calls2025-08-26T15:37:58.280Z

<urlsetxmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"xmlns:news=\"http://www.google.com/schemas/sitemap-news/0.9\"xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"xmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\"xmlns:video=\"http://www.google.com/schemas/sitemap-video/1.1\">

<url>

<loc>https://agentclientprotocol.com/community/contributing</loc>

...

</url>

<url>

<loc>https://agentclientprotocol.com/libraries/rust</loc>

<lastmod>2025-08-27T05:14:11.673Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/libraries/typescript</loc>

<lastmod>2025-08-27T05:14:11.672Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/overview/architecture</loc>

<lastmod>2025-08-26T13:21:13.128Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/overview/introduction</loc>

<lastmod>2025-09-03T17:34:06.935Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/protocol/agent-plan</loc>

<lastmod>2025-08-25T18:36:23.116Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/protocol/content</loc>

<lastmod>2025-08-25T21:20:47.201Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/protocol/file-system</loc>

<lastmod>2025-08-26T15:37:57.794Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/protocol/initialization</loc>

<lastmod>2025-08-26T21:45:50.919Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/protocol/overview</loc>

<lastmod>2025-08-26T21:45:50.917Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/protocol/prompt-turn</loc>

<lastmod>2025-08-25T21:20:49.406Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/protocol/schema</loc>

<lastmod>2025-09-03T21:52:28.838Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/protocol/session-setup</loc>

<lastmod>2025-08-26T15:37:58.281Z</lastmod>

...

</url>

<url>

<loc>https://agentclientprotocol.com/protocol/tool-calls</loc>

<lastmod>2025-08-26T15:37:58.280Z</lastmod>

...

</url>

...

</urlset>

## Agent Client Protocol
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Overview

Introduction

The Agent Client Protocol standardizes communication between code editors (IDEs, text-editors, etc.) and coding agents (programs that use generative AI to autonomously modify code).The protocol is still under development, but it should be complete enough to build interesting user experiences using it.

## [​](https://agentclientprotocol.com/overview/introduction\\#why-acp%3F)  Why ACP?

AI coding agents and editors are tightly coupled but interoperability isn’t the default. Each editor must build custom integrations for every agent they want to support, and agents must implement editor-specific APIs to reach users.
This creates several problems:

- Integration overhead: Every new agent-editor combination requires custom work
- Limited compatibility: Agents work with only a subset of available editors
- Developer lock-in: Choosing an agent often means accepting their available interfaces

ACP solves this by providing a standardized protocol for agent-editor communication, similar to how the [Language Server Protocol (LSP)](https://microsoft.github.io/language-server-protocol/) standardized language server integration.Agents that implement ACP work with any compatible editor. Editors that support ACP gain access to the entire ecosystem of ACP-compatible agents.
This decoupling allows both sides to innovate independently while giving developers the freedom to choose the best tools for their workflow.

## [​](https://agentclientprotocol.com/overview/introduction\\#overview)  Overview

ACP assumes that the user is primarily in their editor, and wants to reach out and use agents to assist them with specific tasks.Agents run as sub-processes of the code editor, and communicate using JSON-RPC over stdio. The protocol re-uses the JSON representations used in MCP where possible, but includes custom types for useful agentic coding UX elements, like displaying diffs.The default format for user-readable text is Markdown, which allows enough flexibility to represent rich formatting without requiring that the code editor is capable of rendering HTML.

## [​](https://agentclientprotocol.com/overview/introduction\\#supported-editors)  Supported Editors

- [Zed](https://zed.dev/docs/ai/external-agents)
- [neovim](https://neovim.io/) through the [CodeCompanion](https://github.com/olimorris/codecompanion.nvim) plugin
- [yetone/avante.nvim](https://github.com/yetone/avante.nvim): A Neovim plugin designed to emulate the behaviour of the Cursor AI IDE.

## [​](https://agentclientprotocol.com/overview/introduction\\#supported-agents)  Supported Agents

- [Gemini](https://github.com/google-gemini/gemini-cli)
- [Claude Code](https://docs.anthropic.com/en/docs/claude-code/overview)
  - [via Zed’s SDK adapter](https://github.com/zed-industries/claude-code-acp)
  - [via Xuanwo’s SDK adapter](https://github.com/Xuanwo/acp-claude-code)

Was this page helpful?

YesNo

[ArchitectureOverview of the Agent Client Protocol architecture\\\\
\\\\
Next](https://agentclientprotocol.com/overview/architecture)

On this page

- [Why ACP?](https://agentclientprotocol.com/overview/introduction#why-acp%3F)
- [Overview](https://agentclientprotocol.com/overview/introduction#overview)
- [Supported Editors](https://agentclientprotocol.com/overview/introduction#supported-editors)
- [Supported Agents](https://agentclientprotocol.com/overview/introduction#supported-agents)

Assistant

Responses are generated using AI and may contain mistakes.

## Client-Agent Initialization
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Protocol

Initialization

The Initialization phase allows [Clients](https://agentclientprotocol.com/protocol/overview#client) and [Agents](https://agentclientprotocol.com/protocol/overview#agent) to negotiate protocol versions, capabilities, and authentication methods.

AgentClientAgentClientConnection establishedNegotiate protocolversion & capabilitiesReady for session setupinitializeinitialize response

Before a Session can be created, Clients **MUST** initialize the connection by calling the `initialize` method with:

- The latest [protocol version](https://agentclientprotocol.com/protocol/initialization#protocol-version) supported
- The [capabilities](https://agentclientprotocol.com/protocol/initialization#client-capabilities) supported

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 0,
  \"method\": \"initialize\",
  \"params\": {
    \"protocolVersion\": 1,
    \"clientCapabilities\": {
      \"fs\": {
        \"readTextFile\": true,
        \"writeTextFile\": true
      }
    }
  }
}

```

The Agent **MUST** respond with the chosen [protocol version](https://agentclientprotocol.com/protocol/initialization#protocol-version) and the [capabilities](https://agentclientprotocol.com/protocol/initialization#agent-capabilities) it supports:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 0,
  \"result\": {
    \"protocolVersion\": 1,
    \"agentCapabilities\": {
      \"loadSession\": true,
      \"promptCapabilities\": {
        \"image\": true,
        \"audio\": true,
        \"embeddedContext\": true
      }
    },
    \"authMethods\": []
  }
}

```

## [​](https://agentclientprotocol.com/protocol/initialization\\#protocol-version)  Protocol version

The protocol versions that appear in the `initialize` requests and responses are a single integer that identifies a **MAJOR** protocol version. This version is only incremented when breaking changes are introduced.Clients and Agents **MUST** agree on a protocol version and act according to its specification.See [Capabilities](https://agentclientprotocol.com/protocol/initialization#capabilities) to learn how non-breaking features are introduced.

### [​](https://agentclientprotocol.com/protocol/initialization\\#version-negotiation)  Version Negotiation

The `initialize` request **MUST** include the latest protocol version the Client supports.If the Agent supports the requested version, it **MUST** respond with the same version. Otherwise, the Agent **MUST** respond with the latest version it supports.If the Client does not support the version specified by the Agent in the `initialize` response, the Client **SHOULD** close the connection and inform the user about it.

## [​](https://agentclientprotocol.com/protocol/initialization\\#capabilities)  Capabilities

Capabilities describe features supported by the Client and the Agent.All capabilities included in the `initialize` request are **OPTIONAL**. Clients and Agents **SHOULD** support all possible combinations of their peer’s capabilities.The introduction of new capabilities is not considered a breaking change. Therefore, Clients and Agents **MUST** treat all capabilities omitted in the `initialize` request as **UNSUPPORTED**.Capabilities are high-level and are not attached to a specific base protocol concept.Capabilities may specify the availability of protocol methods, notifications, or a subset of their parameters. They may also signal behaviors of the Agent or Client implementation.

### [​](https://agentclientprotocol.com/protocol/initialization\\#client-capabilities)  Client Capabilities

The Client **SHOULD** specify whether it supports the following capability:

#### [​](https://agentclientprotocol.com/protocol/initialization\\#file-system)  File System

The Client **MAY** expose its [File System](https://agentclientprotocol.com/protocol/file-system) abstraction to varying degrees:

[​](https://agentclientprotocol.com/protocol/initialization#param-read-text-file)

readTextFile

boolean

The `fs/read_text_file` method is available.

[​](https://agentclientprotocol.com/protocol/initialization#param-write-text-file)

writeTextFile

boolean

The `fs/write_text_file` method is available.

### [​](https://agentclientprotocol.com/protocol/initialization\\#agent-capabilities)  Agent Capabilities

The Agent **SHOULD** specify whether it supports the following capabilities:

[​](https://agentclientprotocol.com/protocol/initialization#param-load-session)

loadSession

boolean

default: false

The [`session/load`](https://agentclientprotocol.com/protocol/session-setup#loading-sessions) method is available.

[​](https://agentclientprotocol.com/protocol/initialization#param-prompt-capabilities)

promptCapabilities

PromptCapabilities Object

Object indicating the different types of [content](https://agentclientprotocol.com/protocol/content) that may be
included in `session/prompt` requests.

#### [​](https://agentclientprotocol.com/protocol/initialization\\#prompt-capabilities)  Prompt capabilities

As a baseline, all Agents **MUST** support `ContentBlock::Text` and `ContentBlock::ResourceLink` in `session/prompt` requests.Optionally, they **MAY** support richer types of [content](https://agentclientprotocol.com/protocol/content) by specifying the following capabilities:

[​](https://agentclientprotocol.com/protocol/initialization#param-image)

image

boolean

default: false

The prompt may include `ContentBlock::Image`

[​](https://agentclientprotocol.com/protocol/initialization#param-audio)

audio

boolean

default: false

The prompt may include `ContentBlock::Audio`

[​](https://agentclientprotocol.com/protocol/initialization#param-embedded-context)

embeddedContext

boolean

default: false

The prompt may include `ContentBlock::Resource`

* * *

Once the connection is initialized, you’re ready to [create a session](https://agentclientprotocol.com/protocol/session-setup) and begin the conversation with the Agent.

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/protocol/overview) [Session SetupCreating and loading sessions\\\\
\\\\
Next](https://agentclientprotocol.com/protocol/session-setup)

On this page

- [Protocol version](https://agentclientprotocol.com/protocol/initialization#protocol-version)
- [Version Negotiation](https://agentclientprotocol.com/protocol/initialization#version-negotiation)
- [Capabilities](https://agentclientprotocol.com/protocol/initialization#capabilities)
- [Client Capabilities](https://agentclientprotocol.com/protocol/initialization#client-capabilities)
- [File System](https://agentclientprotocol.com/protocol/initialization#file-system)
- [Agent Capabilities](https://agentclientprotocol.com/protocol/initialization#agent-capabilities)
- [Prompt capabilities](https://agentclientprotocol.com/protocol/initialization#prompt-capabilities)

Assistant

Responses are generated using AI and may contain mistakes.

## Agent Client Protocol
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Protocol

Content

Content blocks represent displayable information that flows through the Agent Client Protocol. They provide a structured way to handle various types of user-facing content—whether it’s text from language models, images for analysis, or embedded resources for context.Content blocks appear in:

- User prompts sent via [`session/prompt`](https://agentclientprotocol.com/protocol/prompt-turn#1-user-message)
- Language model output streamed through [`session/update`](https://agentclientprotocol.com/protocol/prompt-turn#3-agent-reports-output) notifications
- Progress updates and results from [tool calls](https://agentclientprotocol.com/protocol/tool-calls)

## [​](https://agentclientprotocol.com/protocol/content\\#content-types)  Content Types

The Agent Client Protocol uses the same `ContentBlock` structure as the [Model Context Protocol (MCP)](https://modelcontextprotocol.io/specification/2025-06-18/schema#contentblock).This design choice enables Agents to seamlessly forward content from MCP tool outputs without transformation.

### [​](https://agentclientprotocol.com/protocol/content\\#text-content)  Text Content

Plain text messages form the foundation of most interactions.

Copy

```
{
  \"type\": \"text\",
  \"text\": \"What's the weather like today?\"
}

```

All Agents **MUST** support text content blocks when included in prompts.

[​](https://agentclientprotocol.com/protocol/content#param-text)

text

string

required

The text content to display

[​](https://agentclientprotocol.com/protocol/content#param-annotations)

annotations

Annotations

Optional metadata about how the content should be used or displayed. [Learn\\\\
more](https://modelcontextprotocol.io/specification/2025-06-18/server/resources#annotations).

### [​](https://agentclientprotocol.com/protocol/content\\#image-content)  Image Content

Images can be included for visual context or analysis.

Copy

```
{
  \"type\": \"image\",
  \"mimeType\": \"image/png\",
  \"data\": \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAAB...\"
}

```

Requires the `image` [prompt\\\\
capability](https://agentclientprotocol.com/protocol/initialization#prompt-capabilities) when included in prompts.

[​](https://agentclientprotocol.com/protocol/content#param-data)

data

string

required

Base64-encoded image data

[​](https://agentclientprotocol.com/protocol/content#param-mime-type)

mimeType

string

required

The MIME type of the image (e.g., “image/png”, “image/jpeg”)

[​](https://agentclientprotocol.com/protocol/content#param-uri)

uri

string

Optional URI reference for the image source

[​](https://agentclientprotocol.com/protocol/content#param-annotations-1)

annotations

Annotations

Optional metadata about how the content should be used or displayed. [Learn\\\\
more](https://modelcontextprotocol.io/specification/2025-06-18/server/resources#annotations).

### [​](https://agentclientprotocol.com/protocol/content\\#audio-content)  Audio Content

Audio data for transcription or analysis.

Copy

```
{
  \"type\": \"audio\",
  \"mimeType\": \"audio/wav\",
  \"data\": \"UklGRiQAAABXQVZFZm10IBAAAAABAAEAQB8AAAB...\"
}

```

Requires the `audio` [prompt\\\\
capability](https://agentclientprotocol.com/protocol/initialization#prompt-capabilities) when included in prompts.

[​](https://agentclientprotocol.com/protocol/content#param-data-1)

data

string

required

Base64-encoded audio data

[​](https://agentclientprotocol.com/protocol/content#param-mime-type-1)

mimeType

string

required

The MIME type of the audio (e.g., “audio/wav”, “audio/mp3”)

[​](https://agentclientprotocol.com/protocol/content#param-annotations-2)

annotations

Annotations

Optional metadata about how the content should be used or displayed. [Learn\\\\
more](https://modelcontextprotocol.io/specification/2025-06-18/server/resources#annotations).

### [​](https://agentclientprotocol.com/protocol/content\\#embedded-resource)  Embedded Resource

Complete resource contents embedded directly in the message.

Copy

```
{
  \"type\": \"resource\",
  \"resource\": {
    \"uri\": \"file:///home/user/script.py\",
    \"mimeType\": \"text/x-python\",
    \"text\": \"def hello():\
    print('Hello, world!')\"
  }
}

```

This is the preferred way to include context in prompts, such as when using @-mentions to reference files or other resources.By embedding the content directly in the request, Clients can include context from sources that the Agent may not have direct access to. Requires the `embeddedContext` [prompt\\\\
capability](https://agentclientprotocol.com/protocol/initialization#prompt-capabilities) when included in prompts.

[​](https://agentclientprotocol.com/protocol/content#param-resource)

resource

EmbeddedResourceResource

required

The embedded resource contents, which can be either:

Show Text Resource

[​](https://agentclientprotocol.com/protocol/content#param-uri-1)

uri

string

required

The URI identifying the resource

[​](https://agentclientprotocol.com/protocol/content#param-text-1)

text

string

required

The text content of the resource

[​](https://agentclientprotocol.com/protocol/content#param-mime-type-2)

mimeType

string

Optional MIME type of the text content

Show Blob Resource

[​](https://agentclientprotocol.com/protocol/content#param-uri-2)

uri

string

required

The URI identifying the resource

[​](https://agentclientprotocol.com/protocol/content#param-blob)

blob

string

required

Base64-encoded binary data

[​](https://agentclientprotocol.com/protocol/content#param-mime-type-3)

mimeType

string

Optional MIME type of the blob

[​](https://agentclientprotocol.com/protocol/content#param-annotations-3)

annotations

Annotations

Optional metadata about how the content should be used or displayed. [Learn\\\\
more](https://modelcontextprotocol.io/specification/2025-06-18/server/resources#annotations).

### [​](https://agentclientprotocol.com/protocol/content\\#resource-link)  Resource Link

References to resources that the Agent can access.

Copy

```
{
  \"type\": \"resource_link\",
  \"uri\": \"file:///home/user/document.pdf\",
  \"name\": \"document.pdf\",
  \"mimeType\": \"application/pdf\",
  \"size\": 1024000
}

```

[​](https://agentclientprotocol.com/protocol/content#param-uri-3)

uri

string

required

The URI of the resource

[​](https://agentclientprotocol.com/protocol/content#param-name)

name

string

required

A human-readable name for the resource

[​](https://agentclientprotocol.com/protocol/content#param-mime-type-4)

mimeType

string

The MIME type of the resource

[​](https://agentclientprotocol.com/protocol/content#param-title)

title

string

Optional display title for the resource

[​](https://agentclientprotocol.com/protocol/content#param-description)

description

string

Optional description of the resource contents

[​](https://agentclientprotocol.com/protocol/content#param-size)

size

integer

Optional size of the resource in bytes

[​](https://agentclientprotocol.com/protocol/content#param-annotations-4)

annotations

Annotations

Optional metadata about how the content should be used or displayed. [Learn\\\\
more](https://modelcontextprotocol.io/specification/2025-06-18/server/resources#annotations).

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/protocol/prompt-turn) [Tool CallsHow Agents report tool call execution\\\\
\\\\
Next](https://agentclientprotocol.com/protocol/tool-calls)

On this page

- [Content Types](https://agentclientprotocol.com/protocol/content#content-types)
- [Text Content](https://agentclientprotocol.com/protocol/content#text-content)
- [Image Content](https://agentclientprotocol.com/protocol/content#image-content)
- [Audio Content](https://agentclientprotocol.com/protocol/content#audio-content)
- [Embedded Resource](https://agentclientprotocol.com/protocol/content#embedded-resource)
- [Resource Link](https://agentclientprotocol.com/protocol/content#resource-link)

Assistant

Responses are generated using AI and may contain mistakes.

## Agent Client Protocol Rust
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Libraries

Rust

The [agent-client-protocol](https://crates.io/crates/agent-client-protocol) Rust
crate provides implementations of both sides of the Agent Client Protocol that
you can use to build your own agent server or client.To get started, add the crate as a dependency to your project’s `Cargo.toml`:

Copy

```
cargo add agent-client-protocol

```

Depending on what kind of tool you’re building, you’ll need to implement either
the
[Agent](https://docs.rs/agent-client-protocol/latest/agent_client_protocol/trait.Agent.html)
trait or the
[Client](https://docs.rs/agent-client-protocol/latest/agent_client_protocol/trait.Client.html)
trait to define the interaction with the ACP counterpart.The
[agent](https://github.com/zed-industries/agent-client-protocol/blob/main/rust/example_agent.rs)
and
[client](https://github.com/zed-industries/agent-client-protocol/blob/main/rust/example_client.rs)
example binaries provide runnable examples of how to do this, which you can use
as a starting point.You can read the full documentation for the `agent-client-protocol` crate on
[docs.rs](https://docs.rs/agent-client-protocol/latest/agent_client_protocol/).

## [​](https://agentclientprotocol.com/libraries/rust\\#users)  Users

The `agent-client-protocol` crate powers the integration with external agents in
the [Zed](https://zed.dev/) editor.

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/libraries/typescript) [ContributingHow to participate in the development of ACP\\\\
\\\\
Next](https://agentclientprotocol.com/community/contributing)

On this page

- [Users](https://agentclientprotocol.com/libraries/rust#users)

Assistant

Responses are generated using AI and may contain mistakes.

## Agent Client Protocol
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Protocol

Schema

## [​](https://agentclientprotocol.com/protocol/schema\\#agent)  Agent

Defines the interface that all ACP-compliant agents must implement.Agents are programs that use generative AI to autonomously modify code. They handle
requests from clients and execute tasks using language models and tools.

### [​](https://agentclientprotocol.com/protocol/schema\\#authenticate)  authenticate

Authenticates the client using the specified authentication method.Called when the agent requires authentication before allowing session creation.
The client provides the authentication method ID that was advertised during initialization.After successful authentication, the client can proceed to create sessions with
`new_session` without receiving an `auth_required` error.See protocol docs: [Initialization](https://agentclientprotocol.com/protocol/initialization)

#### [​](https://agentclientprotocol.com/protocol/schema\\#authenticaterequest)  AuthenticateRequest

Request parameters for the authenticate method.Specifies which authentication method to use.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-method-id)

methodId

[AuthMethodId](https://agentclientprotocol.com/protocol/schema#authmethodid)

required

The ID of the authentication method to use. Must be one of the methods
advertised in the initialize response.

### [​](https://agentclientprotocol.com/protocol/schema\\#initialize)  initialize

Establishes the connection with a client and negotiates protocol capabilities.This method is called once at the beginning of the connection to:

- Negotiate the protocol version to use
- Exchange capability information between client and agent
- Determine available authentication methods

The agent should respond with its supported protocol version and capabilities.See protocol docs: [Initialization](https://agentclientprotocol.com/protocol/initialization)

#### [​](https://agentclientprotocol.com/protocol/schema\\#initializerequest)  InitializeRequest

Request parameters for the initialize method.Sent by the client to establish connection and negotiate capabilities.See protocol docs: [Initialization](https://agentclientprotocol.com/protocol/initialization)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-client-capabilities)

clientCapabilities

[ClientCapabilities](https://agentclientprotocol.com/protocol/schema#clientcapabilities)

Capabilities supported by the client.

- Default: `{\"fs\":{\"readTextFile\":false,\"writeTextFile\":false},\"terminal\":false}`

[​](https://agentclientprotocol.com/protocol/schema#param-protocol-version)

protocolVersion

[ProtocolVersion](https://agentclientprotocol.com/protocol/schema#protocolversion)

required

The latest protocol version supported by the client.

#### [​](https://agentclientprotocol.com/protocol/schema\\#initializeresponse)  InitializeResponse

Response from the initialize method.Contains the negotiated protocol version and agent capabilities.See protocol docs: [Initialization](https://agentclientprotocol.com/protocol/initialization)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-agent-capabilities)

agentCapabilities

[AgentCapabilities](https://agentclientprotocol.com/protocol/schema#agentcapabilities)

Capabilities supported by the agent.

- Default: `{\"loadSession\":false,\"promptCapabilities\":{\"audio\":false,\"embeddedContext\":false,\"image\":false}}`

[​](https://agentclientprotocol.com/protocol/schema#param-auth-methods)

authMethods

[AuthMethod](https://agentclientprotocol.com/protocol/schema#authmethod)\\[\\]

Authentication methods supported by the agent.

- Default: `[]`

[​](https://agentclientprotocol.com/protocol/schema#param-protocol-version-1)

protocolVersion

[ProtocolVersion](https://agentclientprotocol.com/protocol/schema#protocolversion)

required

The protocol version the client specified if supported by the agent,
or the latest protocol version supported by the agent.The client should disconnect, if it doesn’t support this version.

### [​](https://agentclientprotocol.com/protocol/schema\\#session%2Fcancel)  session/cancel

Cancels ongoing operations for a session.This is a notification sent by the client to cancel an ongoing prompt turn.Upon receiving this notification, the Agent SHOULD:

- Stop all language model requests as soon as possible
- Abort all tool call invocations in progress
- Send any pending `session/update` notifications
- Respond to the original `session/prompt` request with `StopReason::Cancelled`

See protocol docs: [Cancellation](https://agentclientprotocol.com/protocol/prompt-turn#cancellation)

#### [​](https://agentclientprotocol.com/protocol/schema\\#cancelnotification)  CancelNotification

Notification to cancel ongoing operations for a session.See protocol docs: [Cancellation](https://agentclientprotocol.com/protocol/prompt-turn#cancellation)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-session-id)

sessionId

[SessionId](https://agentclientprotocol.com/protocol/schema#sessionid)

required

The ID of the session to cancel operations for.

### [​](https://agentclientprotocol.com/protocol/schema\\#session%2Fload)  session/load

Loads an existing session to resume a previous conversation.This method is only available if the agent advertises the `loadSession` capability.The agent should:

- Restore the session context and conversation history
- Connect to the specified MCP servers
- Stream the entire conversation history back to the client via notifications

See protocol docs: [Loading Sessions](https://agentclientprotocol.com/protocol/session-setup#loading-sessions)

#### [​](https://agentclientprotocol.com/protocol/schema\\#loadsessionrequest)  LoadSessionRequest

Request parameters for loading an existing session.Only available if the agent supports the `loadSession` capability.See protocol docs: [Loading Sessions](https://agentclientprotocol.com/protocol/session-setup#loading-sessions)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-cwd)

cwd

string

required

The working directory for this session.

[​](https://agentclientprotocol.com/protocol/schema#param-mcp-servers)

mcpServers

[McpServer](https://agentclientprotocol.com/protocol/schema#mcpserver)\\[\\]

required

List of MCP servers to connect to for this session.

[​](https://agentclientprotocol.com/protocol/schema#param-session-id-1)

sessionId

[SessionId](https://agentclientprotocol.com/protocol/schema#sessionid)

required

The ID of the session to load.

### [​](https://agentclientprotocol.com/protocol/schema\\#session%2Fnew)  session/new

Creates a new conversation session with the agent.Sessions represent independent conversation contexts with their own history and state.The agent should:

- Create a new session context
- Connect to any specified MCP servers
- Return a unique session ID for future requests

May return an `auth_required` error if the agent requires authentication.See protocol docs: [Session Setup](https://agentclientprotocol.com/protocol/session-setup)

#### [​](https://agentclientprotocol.com/protocol/schema\\#newsessionrequest)  NewSessionRequest

Request parameters for creating a new session.See protocol docs: [Creating a Session](https://agentclientprotocol.com/protocol/session-setup#creating-a-session)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-cwd-1)

cwd

string

required

The working directory for this session. Must be an absolute path.

[​](https://agentclientprotocol.com/protocol/schema#param-mcp-servers-1)

mcpServers

[McpServer](https://agentclientprotocol.com/protocol/schema#mcpserver)\\[\\]

required

List of MCP (Model Context Protocol) servers the agent should connect to.

#### [​](https://agentclientprotocol.com/protocol/schema\\#newsessionresponse)  NewSessionResponse

Response from creating a new session.See protocol docs: [Creating a Session](https://agentclientprotocol.com/protocol/session-setup#creating-a-session)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-session-id-2)

sessionId

[SessionId](https://agentclientprotocol.com/protocol/schema#sessionid)

required

Unique identifier for the created session.Used in all subsequent requests for this conversation.

### [​](https://agentclientprotocol.com/protocol/schema\\#session%2Fprompt)  session/prompt

Processes a user prompt within a session.This method handles the whole lifecycle of a prompt:

- Receives user messages with optional context (files, images, etc.)
- Processes the prompt using language models
- Reports language model content and tool calls to the Clients
- Requests permission to run tools
- Executes any requested tool calls
- Returns when the turn is complete with a stop reason

See protocol docs: [Prompt Turn](https://agentclientprotocol.com/protocol/prompt-turn)

#### [​](https://agentclientprotocol.com/protocol/schema\\#promptrequest)  PromptRequest

Request parameters for sending a user prompt to the agent.Contains the user’s message and any additional context.See protocol docs: [User Message](https://agentclientprotocol.com/protocol/prompt-turn#1-user-message)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-prompt)

prompt

[ContentBlock](https://agentclientprotocol.com/protocol/schema#contentblock)\\[\\]

required

The blocks of content that compose the user’s message.As a baseline, the Agent MUST support `ContentBlock::Text` and `ContentBlock::ResourceLink`,
while other variants are optionally enabled via `PromptCapabilities`.The Client MUST adapt its interface according to `PromptCapabilities`.The client MAY include referenced pieces of context as either
`ContentBlock::Resource` or `ContentBlock::ResourceLink`.When available, `ContentBlock::Resource` is preferred
as it avoids extra round-trips and allows the message to include
pieces of context from sources the agent may not have access to.

[​](https://agentclientprotocol.com/protocol/schema#param-session-id-3)

sessionId

[SessionId](https://agentclientprotocol.com/protocol/schema#sessionid)

required

The ID of the session to send this user message to

#### [​](https://agentclientprotocol.com/protocol/schema\\#promptresponse)  PromptResponse

Response from processing a user prompt.See protocol docs: [Check for Completion](https://agentclientprotocol.com/protocol/prompt-turn#4-check-for-completion)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-stop-reason)

stopReason

[StopReason](https://agentclientprotocol.com/protocol/schema#stopreason)

required

Indicates why the agent stopped processing the turn.

## [​](https://agentclientprotocol.com/protocol/schema\\#client)  Client

Defines the interface that ACP-compliant clients must implement.Clients are typically code editors (IDEs, text editors) that provide the interface
between users and AI agents. They manage the environment, handle user interactions,
and control access to resources.

### [​](https://agentclientprotocol.com/protocol/schema\\#fs%2Fread-text-file)  fs/read\\_text\\_file

Reads content from a text file in the client’s file system.Only available if the client advertises the `fs.readTextFile` capability.
Allows the agent to access file contents within the client’s environment.See protocol docs: [Client](https://agentclientprotocol.com/protocol/overview#client)

#### [​](https://agentclientprotocol.com/protocol/schema\\#readtextfilerequest)  ReadTextFileRequest

Request to read content from a text file.Only available if the client supports the `fs.readTextFile` capability.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-limit)

limit

integer \\| null

Optional maximum number of lines to read.

- Minimum: `0`

[​](https://agentclientprotocol.com/protocol/schema#param-line)

line

integer \\| null

Optional line number to start reading from (1-based).

- Minimum: `0`

[​](https://agentclientprotocol.com/protocol/schema#param-path)

path

string

required

Absolute path to the file to read.

[​](https://agentclientprotocol.com/protocol/schema#param-session-id-4)

sessionId

[SessionId](https://agentclientprotocol.com/protocol/schema#sessionid)

required

The session ID for this request.

### [​](https://agentclientprotocol.com/protocol/schema\\#fs%2Fwrite-text-file)  fs/write\\_text\\_file

Writes content to a text file in the client’s file system.Only available if the client advertises the `fs.writeTextFile` capability.
Allows the agent to create or modify files within the client’s environment.See protocol docs: [Client](https://agentclientprotocol.com/protocol/overview#client)

#### [​](https://agentclientprotocol.com/protocol/schema\\#writetextfilerequest)  WriteTextFileRequest

Request to write content to a text file.Only available if the client supports the `fs.writeTextFile` capability.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-content)

content

string

required

The text content to write to the file.

[​](https://agentclientprotocol.com/protocol/schema#param-path-1)

path

string

required

Absolute path to the file to write.

[​](https://agentclientprotocol.com/protocol/schema#param-session-id-5)

sessionId

[SessionId](https://agentclientprotocol.com/protocol/schema#sessionid)

required

The session ID for this request.

### [​](https://agentclientprotocol.com/protocol/schema\\#session%2Frequest-permission)  session/request\\_permission

Requests permission from the user for a tool call operation.Called by the agent when it needs user authorization before executing
a potentially sensitive operation. The client should present the options
to the user and return their decision.If the client cancels the prompt turn via `session/cancel`, it MUST
respond to this request with `RequestPermissionOutcome::Cancelled`.See protocol docs: [Requesting Permission](https://agentclientprotocol.com/protocol/tool-calls#requesting-permission)

#### [​](https://agentclientprotocol.com/protocol/schema\\#requestpermissionrequest)  RequestPermissionRequest

Request for user permission to execute a tool call.Sent when the agent needs authorization before performing a sensitive operation.See protocol docs: [Requesting Permission](https://agentclientprotocol.com/protocol/tool-calls#requesting-permission)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-options)

options

[PermissionOption](https://agentclientprotocol.com/protocol/schema#permissionoption)\\[\\]

required

Available permission options for the user to choose from.

[​](https://agentclientprotocol.com/protocol/schema#param-session-id-6)

sessionId

[SessionId](https://agentclientprotocol.com/protocol/schema#sessionid)

required

The session ID for this request.

[​](https://agentclientprotocol.com/protocol/schema#param-tool-call)

toolCall

[ToolCallUpdate](https://agentclientprotocol.com/protocol/schema#toolcallupdate)

required

Details about the tool call requiring permission.

#### [​](https://agentclientprotocol.com/protocol/schema\\#requestpermissionresponse)  RequestPermissionResponse

Response to a permission request.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-outcome)

outcome

[RequestPermissionOutcome](https://agentclientprotocol.com/protocol/schema#requestpermissionoutcome)

required

The user’s decision on the permission request.

### [​](https://agentclientprotocol.com/protocol/schema\\#session%2Fupdate)  session/update

Handles session update notifications from the agent.This is a notification endpoint (no response expected) that receives
real-time updates about session progress, including message chunks,
tool calls, and execution plans.Note: Clients SHOULD continue accepting tool call updates even after
sending a `session/cancel` notification, as the agent may send final
updates before responding with the cancelled stop reason.See protocol docs: [Agent Reports Output](https://agentclientprotocol.com/protocol/prompt-turn#3-agent-reports-output)

#### [​](https://agentclientprotocol.com/protocol/schema\\#sessionnotification)  SessionNotification

Notification containing a session update from the agent.Used to stream real-time progress and results during prompt processing.See protocol docs: [Agent Reports Output](https://agentclientprotocol.com/protocol/prompt-turn#3-agent-reports-output)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-session-id-7)

sessionId

[SessionId](https://agentclientprotocol.com/protocol/schema#sessionid)

required

The ID of the session this update pertains to.

[​](https://agentclientprotocol.com/protocol/schema#param-update)

update

[SessionUpdate](https://agentclientprotocol.com/protocol/schema#sessionupdate)

required

The actual update content.

## [​](https://agentclientprotocol.com/protocol/schema\\#agentcapabilities)  AgentCapabilities

Capabilities supported by the agent.Advertised during initialization to inform the client about
available features and content types.See protocol docs: [Agent Capabilities](https://agentclientprotocol.com/protocol/initialization#agent-capabilities)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-load-session)

loadSession

boolean

Whether the agent supports `session/load`.

- Default: `false`

[​](https://agentclientprotocol.com/protocol/schema#param-prompt-capabilities)

promptCapabilities

[PromptCapabilities](https://agentclientprotocol.com/protocol/schema#promptcapabilities)

Prompt capabilities supported by the agent.

- Default: `{\"audio\":false,\"embeddedContext\":false,\"image\":false}`

## [​](https://agentclientprotocol.com/protocol/schema\\#annotations)  Annotations

Optional annotations for the client. The client can use annotations to inform how objects are used or displayed**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-audience)

audience

array \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-last-modified)

lastModified

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-priority)

priority

number \\| null

## [​](https://agentclientprotocol.com/protocol/schema\\#audiocontent)  AudioContent

Audio provided to or from an LLM.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-annotations)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-data)

data

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type)

mimeType

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#authmethod)  AuthMethod

Describes an available authentication method.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-description)

description

string \\| null

Optional description providing more details about this authentication method.

[​](https://agentclientprotocol.com/protocol/schema#param-id)

id

[AuthMethodId](https://agentclientprotocol.com/protocol/schema#authmethodid)

required

Unique identifier for this authentication method.

[​](https://agentclientprotocol.com/protocol/schema#param-name)

name

string

required

Human-readable name of the authentication method.

## [​](https://agentclientprotocol.com/protocol/schema\\#authmethodid)  AuthMethodId

Unique identifier for an authentication method.**Type:** `string`

## [​](https://agentclientprotocol.com/protocol/schema\\#availablecommand)  AvailableCommand

Information about a command.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-description-1)

description

string

required

Human-readable description of what the command does.

[​](https://agentclientprotocol.com/protocol/schema#param-input)

input

[AvailableCommandInput](https://agentclientprotocol.com/protocol/schema#availablecommandinput) \\| null

Input for the command if required

[​](https://agentclientprotocol.com/protocol/schema#param-name-1)

name

string

required

Command name (e.g., “create\\_plan”, “research\\_codebase”).

## [​](https://agentclientprotocol.com/protocol/schema\\#availablecommandinput)  AvailableCommandInput

**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-object)

Object

All text that was typed after the command name is provided as input.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-hint)

hint

string

required

A brief description of the expected input

## [​](https://agentclientprotocol.com/protocol/schema\\#blobresourcecontents)  BlobResourceContents

Binary resource contents.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-blob)

blob

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type-1)

mimeType

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-uri)

uri

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#clientcapabilities)  ClientCapabilities

Capabilities supported by the client.Advertised during initialization to inform the agent about
available features and methods.See protocol docs: [Client Capabilities](https://agentclientprotocol.com/protocol/initialization#client-capabilities)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-fs)

fs

[FileSystemCapability](https://agentclientprotocol.com/protocol/schema#filesystemcapability)

File system capabilities supported by the client.
Determines which file operations the agent can request.

- Default: `{\"readTextFile\":false,\"writeTextFile\":false}`

[​](https://agentclientprotocol.com/protocol/schema#param-terminal)

terminal

boolean

**UNSTABLE**This capability is not part of the spec yet, and may be removed or changed at any point.

- Default: `false`

## [​](https://agentclientprotocol.com/protocol/schema\\#contentblock)  ContentBlock

Content blocks represent displayable information in the Agent Client Protocol.They provide a structured way to handle various types of user-facing content—whether
it’s text from language models, images for analysis, or embedded resources for context.Content blocks appear in:

- User prompts sent via `session/prompt`
- Language model output streamed through `session/update` notifications
- Progress updates and results from tool calls

This structure is compatible with the Model Context Protocol (MCP), enabling
agents to seamlessly forward content from MCP tool outputs without transformation.See protocol docs: [Content](https://agentclientprotocol.com/protocol/content)**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-text)

text

Plain text contentAll agents MUST support text content blocks in prompts.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-annotations-1)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-text-1)

text

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-type)

type

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-image)

image

Images for visual context or analysis.Requires the `image` prompt capability when included in prompts.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-annotations-2)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-data-1)

data

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type-2)

mimeType

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-type-1)

type

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-uri-1)

uri

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-audio)

audio

Audio data for transcription or analysis.Requires the `audio` prompt capability when included in prompts.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-annotations-3)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-data-2)

data

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type-3)

mimeType

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-type-2)

type

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-resource-link)

resource\\_link

References to resources that the agent can access.All agents MUST support resource links in prompts.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-annotations-4)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-description-2)

description

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type-4)

mimeType

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-name-2)

name

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-size)

size

integer \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-title)

title

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-type-3)

type

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-uri-2)

uri

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-resource)

resource

Complete resource contents embedded directly in the message.Preferred for including context as it avoids extra round-trips.Requires the `embeddedContext` prompt capability when included in prompts.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-annotations-5)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-resource-1)

resource

[EmbeddedResourceResource](https://agentclientprotocol.com/protocol/schema#embeddedresourceresource)

required

[​](https://agentclientprotocol.com/protocol/schema#param-type-4)

type

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#embeddedresource)  EmbeddedResource

The contents of a resource, embedded into a prompt or tool call result.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-annotations-6)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-resource-2)

resource

[EmbeddedResourceResource](https://agentclientprotocol.com/protocol/schema#embeddedresourceresource)

required

## [​](https://agentclientprotocol.com/protocol/schema\\#embeddedresourceresource)  EmbeddedResourceResource

Resource content that can be embedded in a message.**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-text-resource-contents)

TextResourceContents

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type-5)

mimeType

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-text-2)

text

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-uri-3)

uri

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-blob-resource-contents)

BlobResourceContents

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-blob-1)

blob

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type-6)

mimeType

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-uri-4)

uri

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#envvariable)  EnvVariable

An environment variable to set when launching an MCP server.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-name-3)

name

string

required

The name of the environment variable.

[​](https://agentclientprotocol.com/protocol/schema#param-value)

value

string

required

The value to set for the environment variable.

## [​](https://agentclientprotocol.com/protocol/schema\\#filesystemcapability)  FileSystemCapability

File system capabilities that a client may support.See protocol docs: [FileSystem](https://agentclientprotocol.com/protocol/initialization#filesystem)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-read-text-file)

readTextFile

boolean

Whether the Client supports `fs/read_text_file` requests.

- Default: `false`

[​](https://agentclientprotocol.com/protocol/schema#param-write-text-file)

writeTextFile

boolean

Whether the Client supports `fs/write_text_file` requests.

- Default: `false`

## [​](https://agentclientprotocol.com/protocol/schema\\#imagecontent)  ImageContent

An image provided to or from an LLM.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-annotations-7)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-data-3)

data

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type-7)

mimeType

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-uri-5)

uri

string \\| null

## [​](https://agentclientprotocol.com/protocol/schema\\#mcpserver)  McpServer

Configuration for connecting to an MCP (Model Context Protocol) server.MCP servers provide tools and context that the agent can use when
processing prompts.See protocol docs: [MCP Servers](https://agentclientprotocol.com/protocol/session-setup#mcp-servers)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-args)

args

\"string\"\\[\\]

required

Command-line arguments to pass to the MCP server.

[​](https://agentclientprotocol.com/protocol/schema#param-command)

command

string

required

Path to the MCP server executable.

[​](https://agentclientprotocol.com/protocol/schema#param-env)

env

[EnvVariable](https://agentclientprotocol.com/protocol/schema#envvariable)\\[\\]

required

Environment variables to set when launching the MCP server.

[​](https://agentclientprotocol.com/protocol/schema#param-name-4)

name

string

required

Human-readable name identifying this MCP server.

## [​](https://agentclientprotocol.com/protocol/schema\\#permissionoption)  PermissionOption

An option presented to the user when requesting permission.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-kind)

kind

[PermissionOptionKind](https://agentclientprotocol.com/protocol/schema#permissionoptionkind)

required

Hint about the nature of this permission option.

[​](https://agentclientprotocol.com/protocol/schema#param-name-5)

name

string

required

Human-readable label to display to the user.

[​](https://agentclientprotocol.com/protocol/schema#param-option-id)

optionId

[PermissionOptionId](https://agentclientprotocol.com/protocol/schema#permissionoptionid)

required

Unique identifier for this permission option.

## [​](https://agentclientprotocol.com/protocol/schema\\#permissionoptionid)  PermissionOptionId

Unique identifier for a permission option.**Type:** `string`

## [​](https://agentclientprotocol.com/protocol/schema\\#permissionoptionkind)  PermissionOptionKind

The type of permission option being presented to the user.Helps clients choose appropriate icons and UI treatment.**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-allow-once)

allow\\_once

Allow this operation only this time.

[​](https://agentclientprotocol.com/protocol/schema#param-allow-always)

allow\\_always

Allow this operation and remember the choice.

[​](https://agentclientprotocol.com/protocol/schema#param-reject-once)

reject\\_once

Reject this operation only this time.

[​](https://agentclientprotocol.com/protocol/schema#param-reject-always)

reject\\_always

Reject this operation and remember the choice.

## [​](https://agentclientprotocol.com/protocol/schema\\#plan)  Plan

An execution plan for accomplishing complex tasks.Plans consist of multiple entries representing individual tasks or goals.
Agents report plans to clients to provide visibility into their execution strategy.
Plans can evolve during execution as the agent discovers new requirements or completes tasks.See protocol docs: [Agent Plan](https://agentclientprotocol.com/protocol/agent-plan)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-entries)

entries

[PlanEntry](https://agentclientprotocol.com/protocol/schema#planentry)\\[\\]

required

The list of tasks to be accomplished.When updating a plan, the agent must send a complete list of all entries
with their current status. The client replaces the entire plan with each update.

## [​](https://agentclientprotocol.com/protocol/schema\\#planentry)  PlanEntry

A single entry in the execution plan.Represents a task or goal that the assistant intends to accomplish
as part of fulfilling the user’s request.
See protocol docs: [Plan Entries](https://agentclientprotocol.com/protocol/agent-plan#plan-entries)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-content-1)

content

string

required

Human-readable description of what this task aims to accomplish.

[​](https://agentclientprotocol.com/protocol/schema#param-priority-1)

priority

[PlanEntryPriority](https://agentclientprotocol.com/protocol/schema#planentrypriority)

required

The relative importance of this task. Used to indicate which tasks are most
critical to the overall goal.

[​](https://agentclientprotocol.com/protocol/schema#param-status)

status

[PlanEntryStatus](https://agentclientprotocol.com/protocol/schema#planentrystatus)

required

Current execution status of this task.

## [​](https://agentclientprotocol.com/protocol/schema\\#planentrypriority)  PlanEntryPriority

Priority levels for plan entries.Used to indicate the relative importance or urgency of different
tasks in the execution plan.
See protocol docs: [Plan Entries](https://agentclientprotocol.com/protocol/agent-plan#plan-entries)**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-high)

high

High priority task - critical to the overall goal.

[​](https://agentclientprotocol.com/protocol/schema#param-medium)

medium

Medium priority task - important but not critical.

[​](https://agentclientprotocol.com/protocol/schema#param-low)

low

Low priority task - nice to have but not essential.

## [​](https://agentclientprotocol.com/protocol/schema\\#planentrystatus)  PlanEntryStatus

Status of a plan entry in the execution flow.Tracks the lifecycle of each task from planning through completion.
See protocol docs: [Plan Entries](https://agentclientprotocol.com/protocol/agent-plan#plan-entries)**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-pending)

pending

The task has not started yet.

[​](https://agentclientprotocol.com/protocol/schema#param-in-progress)

in\\_progress

The task is currently being worked on.

[​](https://agentclientprotocol.com/protocol/schema#param-completed)

completed

The task has been successfully completed.

## [​](https://agentclientprotocol.com/protocol/schema\\#promptcapabilities)  PromptCapabilities

Prompt capabilities supported by the agent in `session/prompt` requests.Baseline agent functionality requires support for `ContentBlock::Text`
and `ContentBlock::ResourceLink` in prompt requests.Other variants must be explicitly opted in to.
Capabilities for different types of content in prompt requests.Indicates which content types beyond the baseline (text and resource links)
the agent can process.See protocol docs: [Prompt Capabilities](https://agentclientprotocol.com/protocol/initialization#prompt-capabilities)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-audio-1)

audio

boolean

Agent supports `ContentBlock::Audio`.

- Default: `false`

[​](https://agentclientprotocol.com/protocol/schema#param-embedded-context)

embeddedContext

boolean

Agent supports embedded context in `session/prompt` requests.When enabled, the Client is allowed to include `ContentBlock::Resource`
in prompt requests for pieces of context that are referenced in the message.

- Default: `false`

[​](https://agentclientprotocol.com/protocol/schema#param-image-1)

image

boolean

Agent supports `ContentBlock::Image`.

- Default: `false`

## [​](https://agentclientprotocol.com/protocol/schema\\#protocolversion)  ProtocolVersion

Protocol version identifier.This version is only bumped for breaking changes.
Non-breaking changes should be introduced via capabilities.**Type:** `integer (uint16)`

| Constraint | Value |
| --- | --- |
| Minimum | `0` |
| Maximum | `65535` |

## [​](https://agentclientprotocol.com/protocol/schema\\#readtextfileresponse)  ReadTextFileResponse

Response containing the contents of a text file.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-content-2)

content

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#requestpermissionoutcome)  RequestPermissionOutcome

The outcome of a permission request.**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-cancelled)

cancelled

The prompt turn was cancelled before the user responded.When a client sends a `session/cancel` notification to cancel an ongoing
prompt turn, it MUST respond to all pending `session/request_permission`
requests with this `Cancelled` outcome.See protocol docs: [Cancellation](https://agentclientprotocol.com/protocol/prompt-turn#cancellation)

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-outcome-1)

outcome

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-selected)

selected

The user selected one of the provided options.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-option-id-1)

optionId

[PermissionOptionId](https://agentclientprotocol.com/protocol/schema#permissionoptionid)

required

The ID of the option the user selected.

[​](https://agentclientprotocol.com/protocol/schema#param-outcome-2)

outcome

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#resourcelink)  ResourceLink

A resource that the server is capable of reading, included in a prompt or tool call result.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-annotations-8)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-description-3)

description

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type-8)

mimeType

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-name-6)

name

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-size-1)

size

integer \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-title-1)

title

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-uri-6)

uri

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#role)  Role

The sender or recipient of messages and data in a conversation.**Type:** Enumeration

| Value |
| --- |
| `\"assistant\"` |
| `\"user\"` |

## [​](https://agentclientprotocol.com/protocol/schema\\#sessionid)  SessionId

A unique identifier for a conversation session between a client and agent.Sessions maintain their own context, conversation history, and state,
allowing multiple independent interactions with the same agent.\\# Example

Copy

```
use agent_client_protocol::SessionId;
use std::sync::Arc;

let session_id = SessionId(Arc::from(\"sess_abc123def456\"));

```

See protocol docs: [Session ID](https://agentclientprotocol.com/protocol/session-setup#session-id)**Type:** `string`

## [​](https://agentclientprotocol.com/protocol/schema\\#sessionupdate)  SessionUpdate

Different types of updates that can be sent during session processing.These updates provide real-time feedback about the agent’s progress.See protocol docs: [Agent Reports Output](https://agentclientprotocol.com/protocol/prompt-turn#3-agent-reports-output)**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-user-message-chunk)

user\\_message\\_chunk

A chunk of the user’s message being streamed.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-content-3)

content

[ContentBlock](https://agentclientprotocol.com/protocol/schema#contentblock)

required

[​](https://agentclientprotocol.com/protocol/schema#param-session-update)

sessionUpdate

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-agent-message-chunk)

agent\\_message\\_chunk

A chunk of the agent’s response being streamed.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-content-4)

content

[ContentBlock](https://agentclientprotocol.com/protocol/schema#contentblock)

required

[​](https://agentclientprotocol.com/protocol/schema#param-session-update-1)

sessionUpdate

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-agent-thought-chunk)

agent\\_thought\\_chunk

A chunk of the agent’s internal reasoning being streamed.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-content-5)

content

[ContentBlock](https://agentclientprotocol.com/protocol/schema#contentblock)

required

[​](https://agentclientprotocol.com/protocol/schema#param-session-update-2)

sessionUpdate

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-tool-call)

tool\\_call

Notification that a new tool call has been initiated.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-content-6)

content

[ToolCallContent](https://agentclientprotocol.com/protocol/schema#toolcallcontent)\\[\\]

Content produced by the tool call.

[​](https://agentclientprotocol.com/protocol/schema#param-kind-1)

kind

[ToolKind](https://agentclientprotocol.com/protocol/schema#toolkind)

The category of tool being invoked. Helps clients choose appropriate icons and
UI treatment.

[​](https://agentclientprotocol.com/protocol/schema#param-locations)

locations

[ToolCallLocation](https://agentclientprotocol.com/protocol/schema#toolcalllocation)\\[\\]

File locations affected by this tool call. Enables “follow-along” features in
clients.

[​](https://agentclientprotocol.com/protocol/schema#param-raw-input)

rawInput

object

Raw input parameters sent to the tool.

[​](https://agentclientprotocol.com/protocol/schema#param-raw-output)

rawOutput

object

Raw output returned by the tool.

[​](https://agentclientprotocol.com/protocol/schema#param-session-update-3)

sessionUpdate

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-status-1)

status

[ToolCallStatus](https://agentclientprotocol.com/protocol/schema#toolcallstatus)

Current execution status of the tool call.

[​](https://agentclientprotocol.com/protocol/schema#param-title-2)

title

string

required

Human-readable title describing what the tool is doing.

[​](https://agentclientprotocol.com/protocol/schema#param-tool-call-id)

toolCallId

[ToolCallId](https://agentclientprotocol.com/protocol/schema#toolcallid)

required

Unique identifier for this tool call within the session.

[​](https://agentclientprotocol.com/protocol/schema#param-tool-call-update)

tool\\_call\\_update

Update on the status or results of a tool call.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-content-7)

content

array \\| null

Replace the content collection.

[​](https://agentclientprotocol.com/protocol/schema#param-kind-2)

kind

[ToolKind](https://agentclientprotocol.com/protocol/schema#toolkind) \\| null

Update the tool kind.

[​](https://agentclientprotocol.com/protocol/schema#param-locations-1)

locations

array \\| null

Replace the locations collection.

[​](https://agentclientprotocol.com/protocol/schema#param-raw-input-1)

rawInput

object

Update the raw input.

[​](https://agentclientprotocol.com/protocol/schema#param-raw-output-1)

rawOutput

object

Update the raw output.

[​](https://agentclientprotocol.com/protocol/schema#param-session-update-4)

sessionUpdate

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-status-2)

status

[ToolCallStatus](https://agentclientprotocol.com/protocol/schema#toolcallstatus) \\| null

Update the execution status.

[​](https://agentclientprotocol.com/protocol/schema#param-title-3)

title

string \\| null

Update the human-readable title.

[​](https://agentclientprotocol.com/protocol/schema#param-tool-call-id-1)

toolCallId

[ToolCallId](https://agentclientprotocol.com/protocol/schema#toolcallid)

required

The ID of the tool call being updated.

[​](https://agentclientprotocol.com/protocol/schema#param-plan)

plan

The agent’s execution plan for complex tasks.
See protocol docs: [Agent Plan](https://agentclientprotocol.com/protocol/agent-plan)

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-entries-1)

entries

[PlanEntry](https://agentclientprotocol.com/protocol/schema#planentry)\\[\\]

required

The list of tasks to be accomplished.When updating a plan, the agent must send a complete list of all entries
with their current status. The client replaces the entire plan with each update.

[​](https://agentclientprotocol.com/protocol/schema#param-session-update-5)

sessionUpdate

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-available-commands-update)

available\\_commands\\_update

Available commands are ready or have changed

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-available-commands)

availableCommands

[AvailableCommand](https://agentclientprotocol.com/protocol/schema#availablecommand)\\[\\]

required

[​](https://agentclientprotocol.com/protocol/schema#param-session-update-6)

sessionUpdate

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#stopreason)  StopReason

Reasons why an agent stops processing a prompt turn.See protocol docs: [Stop Reasons](https://agentclientprotocol.com/protocol/prompt-turn#stop-reasons)**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-end-turn)

end\\_turn

The turn ended successfully.

[​](https://agentclientprotocol.com/protocol/schema#param-max-tokens)

max\\_tokens

The turn ended because the agent reached the maximum number of tokens.

[​](https://agentclientprotocol.com/protocol/schema#param-max-turn-requests)

max\\_turn\\_requests

The turn ended because the agent reached the maximum number of allowed agent
requests between user turns.

[​](https://agentclientprotocol.com/protocol/schema#param-refusal)

refusal

The turn ended because the agent refused to continue. The user prompt and
everything that comes after it won’t be included in the next prompt, so this
should be reflected in the UI.

[​](https://agentclientprotocol.com/protocol/schema#param-cancelled-1)

cancelled

The turn was cancelled by the client via `session/cancel`.This stop reason MUST be returned when the client sends a `session/cancel`
notification, even if the cancellation causes exceptions in underlying operations.
Agents should catch these exceptions and return this semantically meaningful
response to confirm successful cancellation.

## [​](https://agentclientprotocol.com/protocol/schema\\#textcontent)  TextContent

Text provided to or from an LLM.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-annotations-9)

annotations

[Annotations](https://agentclientprotocol.com/protocol/schema#annotations) \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-text-3)

text

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#textresourcecontents)  TextResourceContents

Text-based resource contents.**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-mime-type-9)

mimeType

string \\| null

[​](https://agentclientprotocol.com/protocol/schema#param-text-4)

text

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-uri-7)

uri

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#toolcall)  ToolCall

Represents a tool call that the language model has requested.Tool calls are actions that the agent executes on behalf of the language model,
such as reading files, executing code, or fetching data from external sources.See protocol docs: [Tool Calls](https://agentclientprotocol.com/protocol/tool-calls)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-content-8)

content

[ToolCallContent](https://agentclientprotocol.com/protocol/schema#toolcallcontent)\\[\\]

Content produced by the tool call.

[​](https://agentclientprotocol.com/protocol/schema#param-kind-3)

kind

[ToolKind](https://agentclientprotocol.com/protocol/schema#toolkind)

The category of tool being invoked. Helps clients choose appropriate icons and
UI treatment.

[​](https://agentclientprotocol.com/protocol/schema#param-locations-2)

locations

[ToolCallLocation](https://agentclientprotocol.com/protocol/schema#toolcalllocation)\\[\\]

File locations affected by this tool call. Enables “follow-along” features in
clients.

[​](https://agentclientprotocol.com/protocol/schema#param-raw-input-2)

rawInput

object

Raw input parameters sent to the tool.

[​](https://agentclientprotocol.com/protocol/schema#param-raw-output-2)

rawOutput

object

Raw output returned by the tool.

[​](https://agentclientprotocol.com/protocol/schema#param-status-3)

status

[ToolCallStatus](https://agentclientprotocol.com/protocol/schema#toolcallstatus)

Current execution status of the tool call.

[​](https://agentclientprotocol.com/protocol/schema#param-title-4)

title

string

required

Human-readable title describing what the tool is doing.

[​](https://agentclientprotocol.com/protocol/schema#param-tool-call-id-2)

toolCallId

[ToolCallId](https://agentclientprotocol.com/protocol/schema#toolcallid)

required

Unique identifier for this tool call within the session.

## [​](https://agentclientprotocol.com/protocol/schema\\#toolcallcontent)  ToolCallContent

Content produced by a tool call.Tool calls can produce different types of content including
standard content blocks (text, images) or file diffs.See protocol docs: [Content](https://agentclientprotocol.com/protocol/tool-calls#content)**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-content-9)

content

Standard content block (text, images, resources).

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-content-10)

content

[ContentBlock](https://agentclientprotocol.com/protocol/schema#contentblock)

required

The actual content block.

[​](https://agentclientprotocol.com/protocol/schema#param-type-5)

type

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-diff)

diff

File modification shown as a diff.

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-new-text)

newText

string

required

The new content after modification.

[​](https://agentclientprotocol.com/protocol/schema#param-old-text)

oldText

string \\| null

The original content (None for new files).

[​](https://agentclientprotocol.com/protocol/schema#param-path-2)

path

string

required

The file path being modified.

[​](https://agentclientprotocol.com/protocol/schema#param-type-6)

type

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-terminal-1)

terminal

Show Properties

[​](https://agentclientprotocol.com/protocol/schema#param-terminal-id)

terminalId

string

required

[​](https://agentclientprotocol.com/protocol/schema#param-type-7)

type

string

required

## [​](https://agentclientprotocol.com/protocol/schema\\#toolcallid)  ToolCallId

Unique identifier for a tool call within a session.**Type:** `string`

## [​](https://agentclientprotocol.com/protocol/schema\\#toolcalllocation)  ToolCallLocation

A file location being accessed or modified by a tool.Enables clients to implement “follow-along” features that track
which files the agent is working with in real-time.See protocol docs: [Following the Agent](https://agentclientprotocol.com/protocol/tool-calls#following-the-agent)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-line-1)

line

integer \\| null

Optional line number within the file.

- Minimum: `0`

[​](https://agentclientprotocol.com/protocol/schema#param-path-3)

path

string

required

The file path being accessed or modified.

## [​](https://agentclientprotocol.com/protocol/schema\\#toolcallstatus)  ToolCallStatus

Execution status of a tool call.Tool calls progress through different statuses during their lifecycle.See protocol docs: [Status](https://agentclientprotocol.com/protocol/tool-calls#status)**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-pending-1)

pending

The tool call hasn’t started running yet because the input is either streaming
or we’re awaiting approval.

[​](https://agentclientprotocol.com/protocol/schema#param-in-progress-1)

in\\_progress

The tool call is currently running.

[​](https://agentclientprotocol.com/protocol/schema#param-completed-1)

completed

The tool call completed successfully.

[​](https://agentclientprotocol.com/protocol/schema#param-failed)

failed

The tool call failed with an error.

## [​](https://agentclientprotocol.com/protocol/schema\\#toolcallupdate)  ToolCallUpdate

An update to an existing tool call.Used to report progress and results as tools execute. All fields except
the tool call ID are optional - only changed fields need to be included.See protocol docs: [Updating](https://agentclientprotocol.com/protocol/tool-calls#updating)**Type:** Object**Properties:**

[​](https://agentclientprotocol.com/protocol/schema#param-content-11)

content

array \\| null

Replace the content collection.

[​](https://agentclientprotocol.com/protocol/schema#param-kind-4)

kind

[ToolKind](https://agentclientprotocol.com/protocol/schema#toolkind) \\| null

Update the tool kind.

[​](https://agentclientprotocol.com/protocol/schema#param-locations-3)

locations

array \\| null

Replace the locations collection.

[​](https://agentclientprotocol.com/protocol/schema#param-raw-input-3)

rawInput

object

Update the raw input.

[​](https://agentclientprotocol.com/protocol/schema#param-raw-output-3)

rawOutput

object

Update the raw output.

[​](https://agentclientprotocol.com/protocol/schema#param-status-4)

status

[ToolCallStatus](https://agentclientprotocol.com/protocol/schema#toolcallstatus) \\| null

Update the execution status.

[​](https://agentclientprotocol.com/protocol/schema#param-title-5)

title

string \\| null

Update the human-readable title.

[​](https://agentclientprotocol.com/protocol/schema#param-tool-call-id-3)

toolCallId

[ToolCallId](https://agentclientprotocol.com/protocol/schema#toolcallid)

required

The ID of the tool call being updated.

## [​](https://agentclientprotocol.com/protocol/schema\\#toolkind)  ToolKind

Categories of tools that can be invoked.Tool kinds help clients choose appropriate icons and optimize how they
display tool execution progress.See protocol docs: [Creating](https://agentclientprotocol.com/protocol/tool-calls#creating)**Type:** Union

[​](https://agentclientprotocol.com/protocol/schema#param-read)

read

Reading files or data.

[​](https://agentclientprotocol.com/protocol/schema#param-edit)

edit

Modifying files or content.

[​](https://agentclientprotocol.com/protocol/schema#param-delete)

delete

Removing files or data.

[​](https://agentclientprotocol.com/protocol/schema#param-move)

move

Moving or renaming files.

[​](https://agentclientprotocol.com/protocol/schema#param-search)

search

Searching for information.

[​](https://agentclientprotocol.com/protocol/schema#param-execute)

execute

Running commands or code.

[​](https://agentclientprotocol.com/protocol/schema#param-think)

think

Internal reasoning or planning.

[​](https://agentclientprotocol.com/protocol/schema#param-fetch)

fetch

Retrieving external data.

[​](https://agentclientprotocol.com/protocol/schema#param-other)

other

Other tool types (default).

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/protocol/agent-plan) [TypeScriptTypeScript library for the Agent Client Protocol\\\\
\\\\
Next](https://agentclientprotocol.com/libraries/typescript)

On this page

- [Agent](https://agentclientprotocol.com/protocol/schema#agent)
- [authenticate](https://agentclientprotocol.com/protocol/schema#authenticate)
- [AuthenticateRequest](https://agentclientprotocol.com/protocol/schema#authenticaterequest)
- [initialize](https://agentclientprotocol.com/protocol/schema#initialize)
- [InitializeRequest](https://agentclientprotocol.com/protocol/schema#initializerequest)
- [InitializeResponse](https://agentclientprotocol.com/protocol/schema#initializeresponse)
- [session/cancel](https://agentclientprotocol.com/protocol/schema#session%2Fcancel)
- [CancelNotification](https://agentclientprotocol.com/protocol/schema#cancelnotification)
- [session/load](https://agentclientprotocol.com/protocol/schema#session%2Fload)
- [LoadSessionRequest](https://agentclientprotocol.com/protocol/schema#loadsessionrequest)
- [session/new](https://agentclientprotocol.com/protocol/schema#session%2Fnew)
- [NewSessionRequest](https://agentclientprotocol.com/protocol/schema#newsessionrequest)
- [NewSessionResponse](https://agentclientprotocol.com/protocol/schema#newsessionresponse)
- [session/prompt](https://agentclientprotocol.com/protocol/schema#session%2Fprompt)
- [PromptRequest](https://agentclientprotocol.com/protocol/schema#promptrequest)
- [PromptResponse](https://agentclientprotocol.com/protocol/schema#promptresponse)
- [Client](https://agentclientprotocol.com/protocol/schema#client)
- [fs/read\\_text\\_file](https://agentclientprotocol.com/protocol/schema#fs%2Fread-text-file)
- [ReadTextFileRequest](https://agentclientprotocol.com/protocol/schema#readtextfilerequest)
- [fs/write\\_text\\_file](https://agentclientprotocol.com/protocol/schema#fs%2Fwrite-text-file)
- [WriteTextFileRequest](https://agentclientprotocol.com/protocol/schema#writetextfilerequest)
- [session/request\\_permission](https://agentclientprotocol.com/protocol/schema#session%2Frequest-permission)
- [RequestPermissionRequest](https://agentclientprotocol.com/protocol/schema#requestpermissionrequest)
- [RequestPermissionResponse](https://agentclientprotocol.com/protocol/schema#requestpermissionresponse)
- [session/update](https://agentclientprotocol.com/protocol/schema#session%2Fupdate)
- [SessionNotification](https://agentclientprotocol.com/protocol/schema#sessionnotification)
- [AgentCapabilities](https://agentclientprotocol.com/protocol/schema#agentcapabilities)
- [Annotations](https://agentclientprotocol.com/protocol/schema#annotations)
- [AudioContent](https://agentclientprotocol.com/protocol/schema#audiocontent)
- [AuthMethod](https://agentclientprotocol.com/protocol/schema#authmethod)
- [AuthMethodId](https://agentclientprotocol.com/protocol/schema#authmethodid)
- [AvailableCommand](https://agentclientprotocol.com/protocol/schema#availablecommand)
- [AvailableCommandInput](https://agentclientprotocol.com/protocol/schema#availablecommandinput)
- [BlobResourceContents](https://agentclientprotocol.com/protocol/schema#blobresourcecontents)
- [ClientCapabilities](https://agentclientprotocol.com/protocol/schema#clientcapabilities)
- [ContentBlock](https://agentclientprotocol.com/protocol/schema#contentblock)
- [EmbeddedResource](https://agentclientprotocol.com/protocol/schema#embeddedresource)
- [EmbeddedResourceResource](https://agentclientprotocol.com/protocol/schema#embeddedresourceresource)
- [EnvVariable](https://agentclientprotocol.com/protocol/schema#envvariable)
- [FileSystemCapability](https://agentclientprotocol.com/protocol/schema#filesystemcapability)
- [ImageContent](https://agentclientprotocol.com/protocol/schema#imagecontent)
- [McpServer](https://agentclientprotocol.com/protocol/schema#mcpserver)
- [PermissionOption](https://agentclientprotocol.com/protocol/schema#permissionoption)
- [PermissionOptionId](https://agentclientprotocol.com/protocol/schema#permissionoptionid)
- [PermissionOptionKind](https://agentclientprotocol.com/protocol/schema#permissionoptionkind)
- [Plan](https://agentclientprotocol.com/protocol/schema#plan)
- [PlanEntry](https://agentclientprotocol.com/protocol/schema#planentry)
- [PlanEntryPriority](https://agentclientprotocol.com/protocol/schema#planentrypriority)
- [PlanEntryStatus](https://agentclientprotocol.com/protocol/schema#planentrystatus)
- [PromptCapabilities](https://agentclientprotocol.com/protocol/schema#promptcapabilities)
- [ProtocolVersion](https://agentclientprotocol.com/protocol/schema#protocolversion)
- [ReadTextFileResponse](https://agentclientprotocol.com/protocol/schema#readtextfileresponse)
- [RequestPermissionOutcome](https://agentclientprotocol.com/protocol/schema#requestpermissionoutcome)
- [ResourceLink](https://agentclientprotocol.com/protocol/schema#resourcelink)
- [Role](https://agentclientprotocol.com/protocol/schema#role)
- [SessionId](https://agentclientprotocol.com/protocol/schema#sessionid)
- [SessionUpdate](https://agentclientprotocol.com/protocol/schema#sessionupdate)
- [StopReason](https://agentclientprotocol.com/protocol/schema#stopreason)
- [TextContent](https://agentclientprotocol.com/protocol/schema#textcontent)
- [TextResourceContents](https://agentclientprotocol.com/protocol/schema#textresourcecontents)
- [ToolCall](https://agentclientprotocol.com/protocol/schema#toolcall)
- [ToolCallContent](https://agentclientprotocol.com/protocol/schema#toolcallcontent)
- [ToolCallId](https://agentclientprotocol.com/protocol/schema#toolcallid)
- [ToolCallLocation](https://agentclientprotocol.com/protocol/schema#toolcalllocation)
- [ToolCallStatus](https://agentclientprotocol.com/protocol/schema#toolcallstatus)
- [ToolCallUpdate](https://agentclientprotocol.com/protocol/schema#toolcallupdate)
- [ToolKind](https://agentclientprotocol.com/protocol/schema#toolkind)

Assistant

Responses are generated using AI and may contain mistakes.

## Agent Execution Plans
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Protocol

Agent Plan

Plans are execution strategies for complex tasks that require multiple steps.Agents may share plans with Clients through [`session/update`](https://agentclientprotocol.com/protocol/prompt-turn#3-agent-reports-output) notifications, providing real-time visibility into their thinking and progress.

## [​](https://agentclientprotocol.com/protocol/agent-plan\\#creating-plans)  Creating Plans

When the language model creates an execution plan, the Agent **SHOULD** report it to the Client:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"update\": {
      \"sessionUpdate\": \"plan\",
      \"entries\": [\\
        {\\
          \"content\": \"Analyze the existing codebase structure\",\\
          \"priority\": \"high\",\\
          \"status\": \"pending\"\\
        },\\
        {\\
          \"content\": \"Identify components that need refactoring\",\\
          \"priority\": \"high\",\\
          \"status\": \"pending\"\\
        },\\
        {\\
          \"content\": \"Create unit tests for critical functions\",\\
          \"priority\": \"medium\",\\
          \"status\": \"pending\"\\
        }\\
      ]
    }
  }
}

```

[​](https://agentclientprotocol.com/protocol/agent-plan#param-entries)

entries

PlanEntry\\[\\]

required

An array of [plan entries](https://agentclientprotocol.com/protocol/agent-plan#plan-entries) representing the tasks to be
accomplished

## [​](https://agentclientprotocol.com/protocol/agent-plan\\#plan-entries)  Plan Entries

Each plan entry represents a specific task or goal within the overall execution strategy:

[​](https://agentclientprotocol.com/protocol/agent-plan#param-content)

content

string

required

A human-readable description of what this task aims to accomplish

[​](https://agentclientprotocol.com/protocol/agent-plan#param-priority)

priority

PlanEntryPriority

required

The relative importance of this task.

- `high`
- `medium`
- `low`

[​](https://agentclientprotocol.com/protocol/agent-plan#param-status)

status

PlanEntryStatus

required

The current [execution status](https://agentclientprotocol.com/protocol/agent-plan#status) of this task

- `pending`
- `in_progress`
- `completed`

## [​](https://agentclientprotocol.com/protocol/agent-plan\\#updating-plans)  Updating Plans

As the Agent progresses through the plan, it **SHOULD** report updates by sending more `session/update` notifications with the same structure.The Agent **MUST** send a complete list of all plan entries in each update and their current status. The Client **MUST** replace the current plan completely.

### [​](https://agentclientprotocol.com/protocol/agent-plan\\#dynamic-planning)  Dynamic Planning

Plans can evolve during execution. The Agent **MAY** add, remove, or modify plan entries as it discovers new requirements or completes tasks, allowing it to adapt based on what it learns.

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/protocol/file-system) [SchemaSchema definitions for the Agent Client Protocol\\\\
\\\\
Next](https://agentclientprotocol.com/protocol/schema)

On this page

- [Creating Plans](https://agentclientprotocol.com/protocol/agent-plan#creating-plans)
- [Plan Entries](https://agentclientprotocol.com/protocol/agent-plan#plan-entries)
- [Updating Plans](https://agentclientprotocol.com/protocol/agent-plan#updating-plans)
- [Dynamic Planning](https://agentclientprotocol.com/protocol/agent-plan#dynamic-planning)

Assistant

Responses are generated using AI and may contain mistakes.

## Tool Calls Overview
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Protocol

Tool Calls

Tool calls represent actions that language models request Agents to perform during a [prompt turn](https://agentclientprotocol.com/protocol/prompt-turn). When an LLM determines it needs to interact with external systems—like reading files, running code, or fetching data—it generates tool calls that the Agent executes on its behalf.Agents report tool calls through [`session/update`](https://agentclientprotocol.com/protocol/prompt-turn#3-agent-reports-output) notifications, allowing Clients to display real-time progress and results to users.While Agents handle the actual execution, they may leverage Client capabilities like [permission requests](https://agentclientprotocol.com/protocol/tool-calls#requesting-permission) or [file system access](https://agentclientprotocol.com/protocol/file-system) to provide a richer, more integrated experience.

## [​](https://agentclientprotocol.com/protocol/tool-calls\\#creating)  Creating

When the language model requests a tool invocation, the Agent **SHOULD** report it to the Client:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"update\": {
      \"sessionUpdate\": \"tool_call\",
      \"toolCallId\": \"call_001\",
      \"title\": \"Reading configuration file\",
      \"kind\": \"read\",
      \"status\": \"pending\"
    }
  }
}

```

[​](https://agentclientprotocol.com/protocol/tool-calls#param-tool-call-id)

toolCallId

ToolCallId

required

A unique identifier for this tool call within the session

[​](https://agentclientprotocol.com/protocol/tool-calls#param-title)

title

string

required

A human-readable title describing what the tool is doing

[​](https://agentclientprotocol.com/protocol/tool-calls#param-kind)

kind

ToolKind

The category of tool being invoked.

Show kinds

- `read` \\- Reading files or data - `edit` \\- Modifying files or content -
`delete` \\- Removing files or data - `move` \\- Moving or renaming files -
`search` \\- Searching for information - `execute` \\- Running commands or code -
`think` \\- Internal reasoning or planning - `fetch` \\- Retrieving external data
- `other` \\- Other tool types (default)

Tool kinds help Clients choose appropriate icons and optimize how they display tool execution progress.

[​](https://agentclientprotocol.com/protocol/tool-calls#param-status)

status

ToolCallStatus

The current [execution status](https://agentclientprotocol.com/protocol/tool-calls#status) (defaults to `pending`)

[​](https://agentclientprotocol.com/protocol/tool-calls#param-content)

content

ToolCallContent\\[\\]

[Content produced](https://agentclientprotocol.com/protocol/tool-calls#content) by the tool call

[​](https://agentclientprotocol.com/protocol/tool-calls#param-locations)

locations

ToolCallLocation\\[\\]

[File locations](https://agentclientprotocol.com/protocol/tool-calls#following-the-agent) affected by this tool call

[​](https://agentclientprotocol.com/protocol/tool-calls#param-raw-input)

rawInput

object

The raw input parameters sent to the tool

[​](https://agentclientprotocol.com/protocol/tool-calls#param-raw-output)

rawOutput

object

The raw output returned by the tool

## [​](https://agentclientprotocol.com/protocol/tool-calls\\#updating)  Updating

As tools execute, Agents send updates to report progress and results.Updates use the `session/update` notification with `tool_call_update`:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"method\": \"session/update\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"update\": {
      \"sessionUpdate\": \"tool_call_update\",
      \"toolCallId\": \"call_001\",
      \"status\": \"in_progress\",
      \"content\": [\\
        {\\
          \"type\": \"content\",\\
          \"content\": {\\
            \"type\": \"text\",\\
            \"text\": \"Found 3 configuration files...\"\\
          }\\
        }\\
      ]
    }
  }
}

```

All fields except `toolCallId` are optional in updates. Only the fields being changed need to be included.

## [​](https://agentclientprotocol.com/protocol/tool-calls\\#requesting-permission)  Requesting Permission

The Agent **MAY** request permission from the user before executing a tool call by calling the `session/request_permission` method:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 5,
  \"method\": \"session/request_permission\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"toolCall\": {
      \"toolCallId\": \"call_001\"
    },
    \"options\": [\\
      {\\
        \"optionId\": \"allow-once\",\\
        \"name\": \"Allow once\",\\
        \"kind\": \"allow_once\"\\
      },\\
      {\\
        \"optionId\": \"reject-once\",\\
        \"name\": \"Reject\",\\
        \"kind\": \"reject_once\"\\
      }\\
    ]
  }
}

```

[​](https://agentclientprotocol.com/protocol/tool-calls#param-session-id)

sessionId

SessionId

required

The session ID for this request

[​](https://agentclientprotocol.com/protocol/tool-calls#param-tool-call)

toolCall

ToolCallUpdate

required

The tool call update containing details about the operation

[​](https://agentclientprotocol.com/protocol/tool-calls#param-options)

options

PermissionOption\\[\\]

required

Available [permission options](https://agentclientprotocol.com/protocol/tool-calls#permission-options) for the user to choose
from

The Client responds with the user’s decision:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 5,
  \"result\": {
    \"outcome\": {
      \"outcome\": \"selected\",
      \"optionId\": \"allow-once\"
    }
  }
}

```

Clients **MAY** automatically allow or reject permission requests according to the user settings.If the current prompt turn gets [cancelled](https://agentclientprotocol.com/protocol/prompt-turn#cancellation), the Client **MUST** respond with the `\"cancelled\"` outcome:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 5,
  \"result\": {
    \"outcome\": {
      \"outcome\": \"cancelled\"
    }
  }
}

```

[​](https://agentclientprotocol.com/protocol/tool-calls#param-outcome)

outcome

RequestPermissionOutcome

required

The user’s decision, either: - `cancelled` \\- The [prompt turn was\\\\
cancelled](https://agentclientprotocol.com/protocol/prompt-turn#cancellation) \\- `selected` with an `optionId` \\- The
ID of the selected permission option

### [​](https://agentclientprotocol.com/protocol/tool-calls\\#permission-options)  Permission Options

Each permission option provided to the Client contains:

[​](https://agentclientprotocol.com/protocol/tool-calls#param-option-id)

optionId

string

required

Unique identifier for this option

[​](https://agentclientprotocol.com/protocol/tool-calls#param-name)

name

string

required

Human-readable label to display to the user

[​](https://agentclientprotocol.com/protocol/tool-calls#param-kind-1)

kind

PermissionOptionKind

required

A hint to help Clients choose appropriate icons and UI treatment for each option.

- `allow_once` \\- Allow this operation only this time
- `allow_always` \\- Allow this operation and remember the choice
- `reject_once` \\- Reject this operation only this time
- `reject_always` \\- Reject this operation and remember the choice

## [​](https://agentclientprotocol.com/protocol/tool-calls\\#status)  Status

Tool calls progress through different statuses during their lifecycle:

[​](https://agentclientprotocol.com/protocol/tool-calls#param-pending)

pending

The tool call hasn’t started running yet because the input is either streaming
or awaiting approval

[​](https://agentclientprotocol.com/protocol/tool-calls#param-in-progress)

in\\_progress

The tool call is currently running

[​](https://agentclientprotocol.com/protocol/tool-calls#param-completed)

completed

The tool call completed successfully

[​](https://agentclientprotocol.com/protocol/tool-calls#param-failed)

failed

The tool call failed with an error

## [​](https://agentclientprotocol.com/protocol/tool-calls\\#content)  Content

Tool calls can produce different types of content:

### [​](https://agentclientprotocol.com/protocol/tool-calls\\#regular-content)  Regular Content

Standard [content blocks](https://agentclientprotocol.com/protocol/content) like text, images, or resources:

Copy

```
{
  \"type\": \"content\",
  \"content\": {
    \"type\": \"text\",
    \"text\": \"Analysis complete. Found 3 issues.\"
  }
}

```

### [​](https://agentclientprotocol.com/protocol/tool-calls\\#diffs)  Diffs

File modifications shown as diffs:

Copy

```
{
  \"type\": \"diff\",
  \"path\": \"/home/user/project/src/config.json\",
  \"oldText\": \"{\
  \\\"debug\\\": false\
}\",
  \"newText\": \"{\
  \\\"debug\\\": true\
}\"
}

```

[​](https://agentclientprotocol.com/protocol/tool-calls#param-path)

path

string

required

The absolute file path being modified

[​](https://agentclientprotocol.com/protocol/tool-calls#param-old-text)

oldText

string

The original content (null for new files)

[​](https://agentclientprotocol.com/protocol/tool-calls#param-new-text)

newText

string

required

The new content after modification

## [​](https://agentclientprotocol.com/protocol/tool-calls\\#following-the-agent)  Following the Agent

Tool calls can report file locations they’re working with, enabling Clients to implement “follow-along” features that track which files the Agent is accessing or modifying in real-time.

Copy

```
{
  \"path\": \"/home/user/project/src/main.py\",
  \"line\": 42
}

```

[​](https://agentclientprotocol.com/protocol/tool-calls#param-path-1)

path

string

required

The absolute file path being accessed or modified

[​](https://agentclientprotocol.com/protocol/tool-calls#param-line)

line

number

Optional line number within the file

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/protocol/content) [File SystemClient filesystem access methods\\\\
\\\\
Next](https://agentclientprotocol.com/protocol/file-system)

On this page

- [Creating](https://agentclientprotocol.com/protocol/tool-calls#creating)
- [Updating](https://agentclientprotocol.com/protocol/tool-calls#updating)
- [Requesting Permission](https://agentclientprotocol.com/protocol/tool-calls#requesting-permission)
- [Permission Options](https://agentclientprotocol.com/protocol/tool-calls#permission-options)
- [Status](https://agentclientprotocol.com/protocol/tool-calls#status)
- [Content](https://agentclientprotocol.com/protocol/tool-calls#content)
- [Regular Content](https://agentclientprotocol.com/protocol/tool-calls#regular-content)
- [Diffs](https://agentclientprotocol.com/protocol/tool-calls#diffs)
- [Following the Agent](https://agentclientprotocol.com/protocol/tool-calls#following-the-agent)

Assistant

Responses are generated using AI and may contain mistakes.

## File System Methods
[Agent Client Protocol home page![light logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/light.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=5cf9119e471543528e40443ba41baf30)![dark logo](https://mintcdn.com/zed-685ed6d6/FgcZrIi8cEeJJGHC/logo/dark.svg?fit=max&auto=format&n=FgcZrIi8cEeJJGHC&q=85&s=ef801d8ed18c55ed6d930fe23a92c719)](https://agentclientprotocol.com/)

Search...

Ctrl K

Search...

Navigation

Protocol

File System

The filesystem methods allow Agents to read and write text files within the Client’s environment. These methods enable Agents to access unsaved editor state and allow Clients to track file modifications made during agent execution.

## [​](https://agentclientprotocol.com/protocol/file-system\\#checking-support)  Checking Support

Before attempting to use filesystem methods, Agents **MUST** verify that the Client supports these capabilities by checking the [Client Capabilities](https://agentclientprotocol.com/protocol/initialization#client-capabilities) field in the `initialize` response:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 0,
  \"result\": {
    \"protocolVersion\": 1,
    \"clientCapabilities\": {
      \"fs\": {
        \"readTextFile\": true,
        \"writeTextFile\": true
      }
    }
  }
}

```

If `readTextFile` or `writeTextFile` is `false` or not present, the Agent **MUST NOT** attempt to call the corresponding filesystem method.

## [​](https://agentclientprotocol.com/protocol/file-system\\#reading-files)  Reading Files

The `fs/read_text_file` method allows Agents to read text file contents from the Client’s filesystem, including unsaved changes in the editor.

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 3,
  \"method\": \"fs/read_text_file\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"path\": \"/home/user/project/src/main.py\",
    \"line\": 10,
    \"limit\": 50
  }
}

```

[​](https://agentclientprotocol.com/protocol/file-system#param-session-id)

sessionId

SessionId

required

The [Session ID](https://agentclientprotocol.com/protocol/session-setup#session-id) for this request

[​](https://agentclientprotocol.com/protocol/file-system#param-path)

path

string

required

Absolute path to the file to read

[​](https://agentclientprotocol.com/protocol/file-system#param-line)

line

number

Optional line number to start reading from (1-based)

[​](https://agentclientprotocol.com/protocol/file-system#param-limit)

limit

number

Optional maximum number of lines to read

The Client responds with the file contents:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 3,
  \"result\": {
    \"content\": \"def hello_world():\
    print('Hello, world!')\
\"
  }
}

```

## [​](https://agentclientprotocol.com/protocol/file-system\\#writing-files)  Writing Files

The `fs/write_text_file` method allows Agents to write or update text files in the Client’s filesystem.

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 4,
  \"method\": \"fs/write_text_file\",
  \"params\": {
    \"sessionId\": \"sess_abc123def456\",
    \"path\": \"/home/user/project/config.json\",
    \"content\": \"{\
  \\\"debug\\\": true,\
  \\\"version\\\": \\\"1.0.0\\\"\
}\"
  }
}

```

[​](https://agentclientprotocol.com/protocol/file-system#param-session-id-1)

sessionId

SessionId

required

The [Session ID](https://agentclientprotocol.com/protocol/session-setup#session-id) for this request

[​](https://agentclientprotocol.com/protocol/file-system#param-path-1)

path

string

required

Absolute path to the file to write.The Client **MUST** create the file if it doesn’t exist.

[​](https://agentclientprotocol.com/protocol/file-system#param-content)

content

string

required

The text content to write to the file

The Client responds with an empty result on success:

Copy

```
{
  \"jsonrpc\": \"2.0\",
  \"id\": 4,
  \"result\": null
}

```

Was this page helpful?

YesNo

[Previous](https://agentclientprotocol.com/protocol/tool-calls) [Agent PlanHow Agents communicate their execution plans\\\\
\\\\
Next](https://agentclientprotocol.com/protocol/agent-plan)

On this page

- [Checking Support](https://agentclientprotocol.com/protocol/file-system#checking-support)
- [Reading Files](https://agentclientprotocol.com/protocol/file-system#reading-files)
- [Writing Files](https://agentclientprotocol.com/protocol/file-system#writing-files)

Assistant

Responses are generated using AI and may contain mistakes.
